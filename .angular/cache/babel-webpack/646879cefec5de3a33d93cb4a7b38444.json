{"ast":null,"code":"import { environment } from \"src/environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../queries/user.queries\";\nexport let AnalyticsService = /*#__PURE__*/(() => {\n  class AnalyticsService {\n    constructor(http, userQuery) {\n      this.http = http;\n      this.userQuery = userQuery;\n      this.currentUserId = \"ANONYM\";\n      this.googleDataLayer = window.dataLayer || [];\n      this.userQuery.selectUserProfile$.pipe().subscribe(profile => {\n        if (profile !== null && profile !== undefined) {\n          this.currentUserId = profile.userId.toString();\n        }\n      });\n    }\n\n    trigger() {\n      const marketingData = {\n        application: window.location.pathname.split(\"/\")[1],\n        countryCode: localStorage.getItem(\"language\") || \"ANONYM\",\n        // customerId: currentCustomerId,\n        event: \"Pageview\",\n        pagePath: window.location.pathname,\n        pageTitle: window.location.pathname.split(\"/\").pop(),\n        environment: environment.env,\n        // userCategory: currentUserCategory,\n        userId: this.currentUserId,\n        userType: \"C\"\n      };\n\n      if (this.googleDataLayer) {\n        this.googleDataLayer.push(marketingData);\n      }\n    }\n\n    triggerCustom(name) {\n      const marketingData = {\n        application: window.location.pathname.split(\"/\")[1],\n        countryCode: localStorage.getItem(\"language\") || \"ANONYM\",\n        // customerId: currentCustomerId,\n        event: \"Pageview\",\n        pagePath: `/${name}`,\n        pageTitle: `${name}`,\n        environment: environment.env,\n        // userCategory: currentUserCategory,\n        userId: this.currentUserId,\n        userType: \"C\"\n      };\n\n      if (this.googleDataLayer) {\n        this.googleDataLayer.push(marketingData);\n      }\n    }\n\n    triggerAction(custom) {\n      if (this.googleDataLayer) {\n        this.googleDataLayer.push(custom);\n      }\n    }\n\n  }\n\n  AnalyticsService.ɵfac = function AnalyticsService_Factory(t) {\n    return new (t || AnalyticsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.UserQuery));\n  };\n\n  AnalyticsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AnalyticsService,\n    factory: AnalyticsService.ɵfac\n  });\n  return AnalyticsService;\n})();","map":null,"metadata":{},"sourceType":"module"}