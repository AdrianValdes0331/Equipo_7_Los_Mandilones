{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/pingu/Documents/Tec/Carrera Tec sem 6/parcial_2/Cemex_Materiales/Cemex_Login_V1.0/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './core-85189c77.js';\nimport { i as initBasics, d as destroyBasics } from './commonComponentFeatures-b771e888.js';\nconst InputTextArea = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.inputId = `cwc-textarea-${textareaIds++}`;\n    /**\n     * The design version of the framework\n     */\n\n    this.designVersion = null;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    this.name = this.inputId;\n    /**\n     * The value of the textarea.\n     */\n\n    this.value = '';\n    /**\n     * When set to true the element is required and the label is decorated with an asterisk (*)\n     */\n\n    this.required = false;\n    /**\n     * Whether auto correct should be enabled when the user is entering/editing the text value.\n     */\n\n    this.autocorrect = 'off';\n    /**\n     * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n     */\n\n    this.autofocus = false;\n    /**\n     * If `true`, the element will have its spelling and grammar checked.\n     */\n\n    this.spellcheck = false;\n    /**\n     * If `true`, it disables resizing of the textarea.\n     */\n\n    this.noResize = false;\n    /**\n     * Specify the tabindex of the native textarea element\n     */\n\n    this.nativeElementTabIndex = '0';\n    /**\n     * Status of the form field.\n     */\n\n    this.status = 'regular';\n    /**\n     * Specify whether component should render from right to left\n     */\n\n    this.rtl = false;\n    /**\n     * When set to true the component doesn't render form-group wrapper\n     */\n\n    this.unwrap = false;\n    /**\n     * Specify if input label should render for mobile\n     */\n\n    this.mobile = false;\n    /**\n     * Specifies the number of characters typed and allowed\n     */\n\n    this.charCounter = false;\n    /**\n     * Automatically size the textarea to the number of rows\n     */\n\n    this.autoSize = false;\n\n    this.onInput = ev => {\n      if (this.nativeInput) {\n        this.value = this.nativeInput.value;\n        this.cwcChange.emit(this.value);\n      }\n\n      this.cwcInput.emit(ev);\n    };\n\n    this.onFocus = () => {\n      if (this.mobile) {\n        if (this.empty) {\n          this.labelEl.classList.add('float', 'float--focused');\n        } else {\n          this.labelEl.classList.add('float--focused');\n        }\n      }\n\n      this.cwcFocus.emit();\n    };\n\n    this.onBlur = () => {\n      if (this.mobile) {\n        if (this.empty) {\n          this.labelEl.classList.remove('float', 'float--focused');\n        } else {\n          this.labelEl.classList.remove('float--focused');\n        }\n      }\n\n      this.cwcBlur.emit();\n    };\n\n    this.valueCheck = () => {\n      this.empty = this.value === null || this.value === '' ? true : false; // if (this.value === null || this.value === '') {\n      //   this.empty = true;\n      // } else {\n      //   this.empty = false;\n      // }\n    };\n\n    this.cwcChange = createEvent(this, \"cwcChange\", 7);\n    this.cwcInput = createEvent(this, \"cwcInput\", 7);\n    this.cwcBlur = createEvent(this, \"cwcBlur\", 7);\n    this.cwcFocus = createEvent(this, \"cwcFocus\", 7);\n  }\n\n  handleDesignVersion(newValue) {\n    if (newValue === 'v2') {\n      this.mobile = false;\n    }\n  }\n  /**\n   * Resize the textarea to fit its content\n   */\n\n\n  resize() {\n    if (this.autoSize) {\n      this.nativeInput.style.height = 'auto';\n      this.nativeInput.style.height = this.nativeInput.scrollHeight + 'px';\n    }\n  }\n  /**\n   * Update the native input element when the value changes\n   */\n\n\n  valueChanged() {\n    const nativeInput = this.nativeInput;\n    const value = this.getValue();\n\n    if (nativeInput && nativeInput.value !== value) {\n      nativeInput.value = value;\n    }\n\n    if (this.mobile) {\n      this.valueCheck();\n    }\n\n    this.resize();\n  }\n  /**\n   * Sets focus on the specified `cwc-textarea`. Use this method instead of the global\n   * `input.focus()`.\n   */\n\n\n  setFocus() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.nativeInput) {\n        _this.nativeInput.focus();\n      }\n    })();\n  }\n  /**\n   * Returns the native `<textarea>` element used under the hood.\n   */\n\n\n  getNativeElement() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this2.nativeInput;\n    })();\n  }\n  /**\n   * Set component value and emit cwcChange event. This is handy for emulating user input in automated testing tools.\n   * @param value New value\n   */\n\n\n  writeValue(value) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.value = value;\n\n      _this3.cwcChange.emit(_this3.value);\n    })();\n  }\n\n  getValue() {\n    return this.value || '';\n  }\n\n  componentWillLoad() {\n    if (this.mobile) {\n      this.placeholder = '';\n      this.valueCheck();\n    }\n\n    initBasics(this);\n  }\n\n  componentDidLoad() {\n    if (this.mobile) {\n      if (!this.empty) {\n        this.labelEl.classList.add('float');\n        this.labelEl.classList.remove('cwc-form-control__label--mobile-icon');\n      }\n    }\n  }\n\n  disconnectedCallback() {\n    destroyBasics(this);\n  }\n\n  render() {\n    const inputComponent = h(\"textarea\", {\n      class: `${['cwc-form-control', this.noResize && 'no-resize', this.autoSize && 'auto-size'].filter(c => Boolean(c)).join(' ')} ${this.designVersion}`,\n      ref: el => this.nativeInput = el,\n      autoFocus: this.autofocus,\n      autoCorrect: this.autocorrect,\n      disabled: this.disabled,\n      maxLength: this.maxlength,\n      minLength: this.minlength,\n      id: this.inputId,\n      name: this.name,\n      placeholder: this.placeholder || '',\n      readOnly: this.readonly,\n      required: this.required,\n      spellCheck: this.spellcheck,\n      cols: this.cols,\n      rows: this.rows,\n      wrap: this.wrap,\n      onInput: this.onInput,\n      onBlur: this.onBlur,\n      onFocus: this.onFocus,\n      value: this.value,\n      \"aria-invalid\": this.status === 'error',\n      \"aria-label\": this.label,\n      \"aria-placeholder\": this.placeholder,\n      \"aria-describedby\": this.status === 'error' ? `${this.inputId}-error` : null,\n      tabindex: this.nativeElementTabIndex,\n      style: {\n        width: this.cols ? 'auto' : '100%'\n      }\n    });\n    const charCounter = this.charCounter ? h(\"span\", {\n      class: 'cwc-form-control__label__char-counter'\n    }, this.value.length, this.maxlength ? '/' + this.maxlength : '') : '';\n    return this.unwrap ? h(Host, {\n      class: this.designVersion\n    }, \"inputComponent\") : h(Host, {\n      class: this.designVersion\n    }, h(\"cwc-form-group\", {\n      label: this.label,\n      for: this.inputId,\n      required: this.required,\n      status: this.status,\n      statusMessage: this.statusMessage,\n      statusElementId: `${this.inputId}-error`,\n      style: {\n        width: '100%'\n      },\n      mobile: this.mobile,\n      designVersion: this.designVersion\n    }, this.mobile ? h(\"label\", {\n      htmlFor: this.inputId,\n      class: 'cwc-form-control__label--mobile',\n      ref: el => this.labelEl = el\n    }, this.label, this.label && this.required && h(\"span\", {\n      class: \"required\"\n    }, \" *\")) : '', inputComponent, charCounter));\n  }\n\n  get host() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"designVersion\": [\"handleDesignVersion\"],\n      \"value\": [\"valueChanged\"]\n    };\n  }\n\n  static get style() {\n    return \"*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host(.v2) textarea.cwc-form-control{border-radius:8px}:host(.v2) .cwc-form-control__label--mobile{color:var(--cwc-textarea-label-mobile-color,var(--cwc-color-ui-primary-darkest,#001b3a))}:host(.v2) .error label{color:var(--cwc-textarea-label-error-color,var(--cwc-color-status-error,#ee3d42))}:host(.v2) .success label{color:var(--cwc-textarea-label-success-color,var(--cwc-color-status-success,#7ac943))}:host(.v2) .warning label{color:var(--cwc-textarea-label-warning-color,var(--cwc-color-status-warning,#fbb03b))}:host{display:inline-block}:host([disabled]) .cwc-form-control__label--mobile{background:var(--cwc-textarea-label-mobile-background-color,var(--cwc-color-grayscale-light,#d6d6d6))}:host([disabled]) .cwc-form-control__label--mobile.float{color:var(--cwc-textarea-label-mobile-float-color,var(--cwc-color-grayscale-medium,#666));background:-webkit-gradient(linear,left bottom,left top,from(var(--cwc-color-grayscale-light,#d6d6d6)),color-stop(40%,var(--cwc-color-grayscale-white,#fff)),color-stop(60%,var(--cwc-color-grayscale-white,#fff)),to(hsla(0,0%,100%,0)));background:linear-gradient(0deg,var(--cwc-color-grayscale-light,#d6d6d6),var(--cwc-color-grayscale-white,#fff) 40%,var(--cwc-color-grayscale-white,#fff) 60%,hsla(0,0%,100%,0))}.error textarea{border:.0625rem solid var(--cwc-textarea-error-border-color,var(--cwc-color-status-error,#ee3d42));background-color:var(--cwc-textarea-error-background-color,var(--cwc-color-status-error-alpha-five,rgba(238,61,66,.05)))}.error textarea:active,.error textarea:focus{border-color:var(--cwc-textarea-focus-error-border-color,var(--cwc-color-status-error-dark,#b71c1c));background-color:var(--cwc-textarea-focus-error-background-color,var(--cwc-color-status-error-alpha-five,rgba(238,61,66,.05)))}.error label{background-color:inherit}.error label.float{color:var(--cwc-textarea-label-error-color,var(--cwc-color-status-error,#ee3d42));background:-webkit-gradient(linear,left bottom,left top,from(var(--cwc-color-status-error-alpha-five,rgba(238,61,66,.05))),color-stop(40%,var(--cwc-color-grayscale-white,#fff)),color-stop(60%,var(--cwc-color-grayscale-white,#fff)),to(hsla(0,0%,100%,0)));background:linear-gradient(0deg,var(--cwc-color-status-error-alpha-five,rgba(238,61,66,.05)),var(--cwc-color-grayscale-white,#fff) 40%,var(--cwc-color-grayscale-white,#fff) 60%,hsla(0,0%,100%,0))}.error label.float--focused{color:var(--cwc-textarea-label-focus-error-color,var(--cwc-color-status-error-dark,#b71c1c))}.warning textarea{border:.0625rem solid var(--cwc-textarea-warning-border-color,var(--cwc-color-status-warning,#fbb03b));background-color:var(--cwc-textarea-warning-background-color,var(--cwc-color-status-warning-alpha-five,rgba(251,176,59,.05)))}.warning textarea:active,.warning textarea:focus{border-color:var(--cwc-textarea-focus-warning-border-color,var(--cwc-color-status-warning-dark,#ff8f00));background-color:var(--cwc-textarea-focus-warning-background-color,var(--cwc-color-status-warning-alpha-five,rgba(251,176,59,.05)))}.warning label{background-color:inherit}.warning label.float{color:var(--cwc-textarea-label-warning-color,var(--cwc-color-status-warning,#fbb03b));background:-webkit-gradient(linear,left bottom,left top,from(var(--cwc-color-status-warning-alpha-five,rgba(251,176,59,.05))),color-stop(40%,var(--cwc-color-grayscale-white,#fff)),color-stop(60%,var(--cwc-color-grayscale-white,#fff)),to(hsla(0,0%,100%,0)));background:linear-gradient(0deg,var(--cwc-color-status-warning-alpha-five,rgba(251,176,59,.05)),var(--cwc-color-grayscale-white,#fff) 40%,var(--cwc-color-grayscale-white,#fff) 60%,hsla(0,0%,100%,0))}.warning label.float--focused{color:var(--cwc-textarea-label-focus-warning-color,var(--cwc-color-status-warning-dark,#ff8f00))}.success textarea{border:.0625rem solid var(--cwc-textarea-success-border-color,var(--cwc-color-status-success,#7ac943));background-color:var(--cwc-textarea-success-background-color,var(--cwc-color-status-success-alpha-five,rgba(122,201,67,.05)))}.success textarea:active,.success textarea:focus{border-color:var(--cwc-textarea-focus-success-border-color,var(--cwc-color-status-success-dark,#1b5e20));background-color:var(--cwc-textarea-focus-success-background-color,var(--cwc-color-status-success-alpha-five,rgba(122,201,67,.05)))}.success label{background-color:inherit}.success label.float{color:var(--cwc-textarea-label-success-color,var(--cwc-color-status-success,#7ac943));background:-webkit-gradient(linear,left bottom,left top,from(var(--cwc-color-status-success-alpha-five,rgba(122,201,67,.05))),color-stop(40%,var(--cwc-color-grayscale-white,#fff)),color-stop(60%,var(--cwc-color-grayscale-white,#fff)),to(hsla(0,0%,100%,0)));background:linear-gradient(0deg,var(--cwc-color-status-success-alpha-five,rgba(122,201,67,.05)),var(--cwc-color-grayscale-white,#fff) 40%,var(--cwc-color-grayscale-white,#fff) 60%,hsla(0,0%,100%,0))}.success label.float--focused{color:var(--cwc-textarea-label-focus-success-color,var(--cwc-color-status-success-dark,#1b5e20))}.no-resize{resize:none}.cwc-form-control{display:block;width:100%}[dir=ltr] .cwc-form-control__label--mobile{left:16px}[dir=rtl] .cwc-form-control__label--mobile{right:16px}.cwc-form-control__label--mobile{position:absolute;top:12px;inset-inline-start:16px;color:var(--cwc-textarea-label-mobile-color,var(--cwc-color-grayscale-medium,#666));font-size:1rem;line-height:1rem;background:var(--cwc-textarea-label-mobile-background-color,var(--cwc-color-grayscale-white,#fff));border-radius:3px;cursor:text;z-index:1}.cwc-form-control__label--mobile,.cwc-form-control__label--mobile.float{-webkit-transition:all .15s;transition:all .15s;-webkit-transition-timing-function:cubic-bezier(.4,0,.2,1);transition-timing-function:cubic-bezier(.4,0,.2,1)}.cwc-form-control__label--mobile.float{font-size:.75rem;line-height:.75rem;top:-6px;padding:0 2px;color:var(--cwc-textarea-label-mobile-float-color,var(--cwc-color-grayscale-medium,#666));background:-webkit-gradient(linear,left bottom,left top,color-stop(50%,var(--cwc-color-grayscale-white,#fff)),to(hsla(0,0%,100%,0)));background:linear-gradient(0deg,var(--cwc-color-grayscale-white,#fff) 50%,hsla(0,0%,100%,0))}.cwc-form-control__label--mobile.float--focused{color:var(--cwc-textarea-label-mobile-float-focus-color,var(--cwc-color-links,#3fa9f5))}[dir=ltr] .cwc-form-control__label__char-counter{left:0}[dir=rtl] .cwc-form-control__label__char-counter{right:0}.cwc-form-control__label__char-counter{font-size:.75rem;display:inline-block;position:absolute;inset-inline-start:0;bottom:.125em;height:16px;direction:rtl}textarea{font-size:1rem;line-height:1rem;border-radius:3px;min-height:2.5rem;padding:.7rem 1rem;border:.0625rem solid var(--cwc-textarea-border-color,var(--cwc-color-elements-input-border,#adaebb));background-color:var(--cwc-textarea-background-color,var(--cwc-color-grayscale-white,#fff));font-family:inherit;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none}textarea:active,textarea:focus{outline:0 none;border-color:var(--cwc-textarea-focus-border-color,var(--cwc-color-links,#3fa9f5));background-color:var(--cwc-textarea-focus-background-color,var(--cwc-color-grayscale-white,#fff))}textarea:disabled{background-color:var(--cwc-textarea-disabled-background-color,var(--cwc-color-grayscale-light,#d6d6d6))}textarea:disabled:active,textarea:disabled:focus{border-color:var(--cwc-textarea-disabled-focus-background-color,var(--cwc-color-elements-input-border,#adaebb))}textarea::-webkit-input-placeholder{color:var(--cwc-textarea-placeholder-color,var(--cwc-color-grayscale-medium,#666));font-size:1rem;line-height:normal!important}textarea::-moz-placeholder{color:var(--cwc-textarea-placeholder-color,var(--cwc-color-grayscale-medium,#666));font-size:1rem}textarea:-ms-input-placeholder{color:var(--cwc-textarea-placeholder-color,var(--cwc-color-grayscale-medium,#666));font-size:1rem}textarea:-moz-placeholder{color:var(--cwc-textarea-placeholder-color,var(--cwc-color-grayscale-medium,#666));font-size:1rem}\\@media (hover:hover){.regular:hover>.float{color:var(--cwc-textarea-hover-color,var(--cwc-color-links,#3fa9f5))}.error textarea:hover{border-color:var(--cwc-textarea-hover-error-border-color,var(--cwc-color-status-error-dark,#b71c1c));background-color:var(--cwc-textarea-hover-error-background-color,var(--cwc-color-status-error-alpha-five,rgba(238,61,66,.05)))}.error:hover>.float{color:var(--cwc-textarea-hover-error-color,var(--cwc-color-status-error-dark,#b71c1c))}.warning textarea:hover{border-color:var(--cwc-textarea-hover-warning-border-color,var(--cwc-color-status-warning-dark,#ff8f00));background-color:var(--cwc-textarea-hover-warning-background-color,var(--cwc-color-status-warning-alpha-five,rgba(251,176,59,.05)))}.warning:hover>.float{color:var(--cwc-textarea-hover-warning-color,var(--cwc-color-status-warning-dark,#ff8f00))}.success textarea:hover{border-color:var(--cwc-textarea-hover-success-border-color,var(--cwc-color-status-success-dark,#1b5e20));background-color:var(--cwc-textarea-hover-success-background-color,var(--cwc-color-status-success-alpha-five,rgba(122,201,67,.05)))}.success:hover>.float{color:var(--cwc-textarea-hover-success-color,var(--cwc-color-status-success-dark,#1b5e20))}textarea:hover{outline:0 none;border-color:var(--cwc-textarea-hover-border-color,var(--cwc-color-links,#3fa9f5));background-color:var(--cwc-textarea-hover-background-color,var(--cwc-color-grayscale-white,#fff))}textarea:disabled:hover{border-color:var(--cwc-textarea-hover-disabled-border-color,var(--cwc-color-elements-input-border,#adaebb));background-color:var(--cwc-textarea-hover-disabled-background-color,var(--cwc-color-grayscale-light,#d6d6d6))}}[dir=rtl] .cwc-form-control__label__char-counter{direction:ltr}.auto-size{overflow:hidden;resize:none}\";\n  }\n\n};\nlet textareaIds = 0;\nexport { InputTextArea as cwc_textarea };","map":null,"metadata":{},"sourceType":"module"}