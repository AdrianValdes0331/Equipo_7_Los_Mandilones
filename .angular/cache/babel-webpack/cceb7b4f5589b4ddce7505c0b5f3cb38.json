{"ast":null,"code":"import { isFunction } from './isFunction';\nimport { compareValues } from './sort';\nimport { coerceArray } from './coerceArray'; // @internal\n\nexport function entitiesToArray(state, options) {\n  let arr = [];\n  const {\n    ids,\n    entities\n  } = state;\n  const {\n    filterBy,\n    limitTo,\n    sortBy,\n    sortByOrder\n  } = options;\n\n  for (let i = 0; i < ids.length; i++) {\n    const entity = entities[ids[i]];\n\n    if (!filterBy) {\n      arr.push(entity);\n      continue;\n    }\n\n    const toArray = coerceArray(filterBy);\n    const allPass = toArray.every(fn => fn(entity, i));\n\n    if (allPass) {\n      arr.push(entity);\n    }\n  }\n\n  if (sortBy) {\n    let _sortBy = isFunction(sortBy) ? sortBy : compareValues(sortBy, sortByOrder);\n\n    arr = arr.sort((a, b) => _sortBy(a, b, state));\n  }\n\n  const length = Math.min(limitTo || arr.length, arr.length);\n  return length === arr.length ? arr : arr.slice(0, length);\n} //# sourceMappingURL=entitiesToArray.js.map","map":null,"metadata":{},"sourceType":"module"}