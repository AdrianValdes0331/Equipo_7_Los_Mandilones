{"ast":null,"code":"import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './core-85189c77.js';\nimport { i as initBasics, d as destroyBasics } from './commonComponentFeatures-b771e888.js';\nimport { d as debounce } from './helpers-bb43a8d9.js';\nconst breakpointAsMin = 767;\nconst TopnavMenu = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The design version of the framework\n     */\n\n    this.designVersion = null;\n    /**\n     * Specify the variant (bright or dark) of the topnav\n     */\n\n    this.variant = 'negative';\n    /**\n     * Specify if it will render in rtl mode\n     */\n\n    this.rtl = false;\n    /**\n     * Specify the nav aria-label\n     */\n\n    this.ariaLabelNav = 'Main Menu';\n    /**\n     * Specify if in responsive menu will collapse into sidenav\n     */\n\n    this.collapsable = true;\n    /**\n     * Specify the nav aria-label\n     */\n\n    this.open = false;\n    /**\n     * Specify the width of the window to do responsive adaptation\n     */\n\n    this.windowWidth = null;\n    /**\n     * An array of menu items: CwcMenuItemType { label: string; active: boolean; href: string; target: string; children: CwcMenuItemType[]; clickFn: any; }\n     */\n\n    this.menu = [];\n    /*\n    // NOT IMPLEMENTED YET\n    createMenu(menuItems: HTMLCollection) {\n      function parseMenu(menuChildren: HTMLCollection): any {\n        const output = [];\n        Array.from(menuChildren).forEach((menuItem: HTMLElement) => {\n          // let's check it is a menuItem\n          if (menuItem.tagName === 'CWC-TOPNAV-MENU-ITEM') {\n            // create a menu item element\n            const menuObj: CwcMenuItemType = {\n              label: menuItem.getAttribute('label'),\n              active: menuItem.getAttribute('active') !== null ? true : false,\n              href: menuItem.getAttribute('href'),\n              target: menuItem.getAttribute('target'),\n              clickFn: () => {\n                return false;\n              },\n              children: [],\n            };\n                   if (menuItem.children && (menuItem.children.length > 0)) {\n              menuObj.children = parseMenu(menuItem.children);\n            }\n                   output.push(menuObj);\n          }\n        });\n        return output;\n      }\n             const menu = parseMenu(menuItems);\n      this.menu = menu;\n    }\n    */\n    // this function reflects the change to the menu model\n\n    this.findMenuitem = (haystack, needle) => {\n      let found = false;\n      haystack.forEach(item => {\n        if (item === needle) {\n          item.active = true;\n          found = true;\n        } else {\n          item.active = false;\n        }\n\n        if (item.children && item.children.length > 0) {\n          this.findMenuitem(item.children, needle) && (item.active = true);\n        }\n      });\n      this.menu = [...this.menu];\n      return found;\n    };\n\n    this.handleMenuClick = (e, menuItem, isSub) => {\n      const href = menuItem.href;\n      const target = menuItem.target;\n      menuItem.clickFn && menuItem.clickFn(); // reflect the click to the model\n\n      this.findMenuitem(this.menu, menuItem);\n\n      if (!isSub) {\n        const button = e.path[0];\n        this.moveSlider(button);\n      }\n\n      this.topnavMenuClickEventHandler.emit(menuItem); // if it's a link, then execute the link behavior\n\n      if (href) {\n        switch (target) {\n          case null:\n            window.location.href = href;\n            break;\n\n          case '_self':\n            window.location.href = href;\n            break;\n\n          case '_blank':\n            window.open(href);\n            break;\n\n          case '_top':\n            window.top.location.href = href;\n            break;\n\n          case '_parent':\n            window.parent.location.href = href;\n            break;\n\n          default:\n            const frames = window.frames;\n\n            for (let i = 0; i < frames.length; i++) {\n              const frame = frames[i];\n\n              if (frame.name === target) {\n                frame.location.href = href;\n                break;\n              }\n            }\n\n        }\n      }\n    };\n\n    this.handleClickSub = event => {\n      const popover = event.target;\n      this.moveSlider(popover);\n      event.target.toggle();\n    };\n\n    this.setWindowWidth = debounce(function () {\n      this.windowWidth = window.innerWidth;\n    }.bind(this));\n    this.topnavMenuClickEventHandler = createEvent(this, \"cwcTopnavMenuClick\", 7);\n    this.notCollapsableEvent = createEvent(this, \"cwcNotCollapsable\", 7);\n  }\n  /**\n   * Listens to expand/collapse menu\n   */\n\n\n  handleSidenavToggle() {\n    this.open = !this.open;\n  }\n\n  moveSlider(activeEl) {\n    // move the slider\n    if (activeEl && this.slider) {\n      this.slider.style.left = activeEl.offsetLeft + 'px';\n      this.slider.style.width = activeEl.offsetWidth + 'px';\n    }\n  }\n\n  renderMenu(menuItems = [], isChild = false) {\n    // responsive mode\n    const renderSidenavItems = items => {\n      return items.map(item => {\n        !item.href && (item.href = null);\n        !item.target && (item.target = null);\n        !item.clickFn && (item.clickFn = () => {\n          return false;\n        });\n        return h(\"cwc-sidenav-menu-item\", {\n          label: item.label,\n          // href={item.href}\n          // target={item.target}\n          onCwcClick: e => {\n            this.handleMenuClick(e, item, isChild);\n          },\n          variant: this.variant\n        }, item.children && item.children.length > 0 && renderSidenavItems(item.children));\n      });\n    }; // desktop mode\n\n\n    if (!this.collapsable || this.windowWidth > breakpointAsMin) {\n      return menuItems.map(menuItem => {\n        if (menuItem.children && menuItem.children.length > 0) {\n          return h(\"cwc-popover\", {\n            variant: \"menu\",\n            onCwcClickWithin: this.handleClickSub\n          }, h(\"div\", {\n            class: `cwc-topnav-menu__item ${menuItem.active ? 'active' : ''} ${isChild ? 'list' : ''} ${this.collapsable ? 'collapsable' : 'not-collapsable'}`,\n            slot: \"target\",\n            onClick: () => {\n              menuItem.clickFn && menuItem.clickFn();\n            }\n          }, menuItem.label, h(\"span\", {\n            class: \"cwc-topnav-menu__chevron cmx-icon-arrow-down-single\"\n          })), h(\"div\", {\n            slot: \"content\"\n          }, h(\"div\", null, this.renderMenu(menuItem.children, true))));\n        }\n\n        return isChild ? h(\"cwc-menu-item\", {\n          active: menuItem.active,\n          onCwcClick: e => {\n            this.handleMenuClick(e, menuItem, false);\n          }\n        }, menuItem.label) : h(\"div\", {\n          class: `cwc-topnav-menu__item ${menuItem.active ? 'active' : ''} ${isChild ? 'list' : ''}`,\n          onClick: e => {\n            this.handleMenuClick(e, menuItem, false);\n          }\n        }, menuItem.label);\n      });\n    } else {\n      return h(\"div\", {\n        class: \"cwc-topnav-menu__sidenav\"\n      }, h(\"cwc-sidenav\", {\n        \"footer-slot\": \"false\",\n        variant: this.variant\n      }, h(\"cwc-sidenav-menu\", {\n        slot: \"menu-items\",\n        variant: this.variant\n      }, renderSidenavItems(menuItems))));\n    }\n  }\n\n  renderSlider() {\n    let someActive = false;\n    this.menu.forEach(item => {\n      if (item.active) {\n        someActive = true;\n      }\n    });\n    return someActive;\n  }\n\n  componentWillLoad() {\n    initBasics(this);\n    this.setWindowWidth();\n  }\n\n  componentDidLoad() {\n    window.addEventListener('resize', this.setWindowWidth.bind(this));\n  }\n\n  componentDidRender() {\n    if (this.windowWidth > breakpointAsMin) {\n      const activeElement = this.host.shadowRoot.querySelector('.cwc-topnav-menu__item.active');\n      this.moveSlider(activeElement);\n    }\n\n    if (!this.collapsable) {\n      this.notCollapsableEvent.emit();\n    }\n  }\n\n  disconnectedCallback() {\n    destroyBasics(this);\n    window.removeEventListener('resize', this.setWindowWidth);\n  }\n\n  render() {\n    // return the menu\n    return h(Host, {\n      class: `cwc-topnav-menu ${this.designVersion} ${this.variant && 'cwc-topnav-menu--' + this.variant} ${this.open && 'open'} ${this.collapsable ? 'collapsable' : 'not-collapsable'}`,\n      \"tab-index\": \"-1\",\n      role: \"navigation\",\n      \"aria-label\": this.ariaLabelNav\n    }, this.renderMenu(this.menu), this.renderSlider() ? h(\"div\", {\n      class: \"cwc-topnav-menu__slider\",\n      ref: el => this.slider = el\n    }) : null);\n  }\n\n  get host() {\n    return getElement(this);\n  }\n\n  static get style() {\n    return \"\\@charset \\\"UTF-8\\\";*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-wrap:nowrap;flex-wrap:nowrap;margin:0;overflow-x:auto;padding:0;width:auto;position:relative;height:100%;-ms-flex-align:stretch;align-items:stretch}:host(.v1) .cwc-topnav-menu__slider{background-color:transparent}::slotted(*){display:none}.cwc-topnav-menu__item{color:var(--cwc-topnav-menu-item-text-color,var(--cwc-color-grayscale-white-alpha-eighty,hsla(0,0%,100%,.8)));text-decoration:none;padding:0 1.2rem;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;border:none;background-color:transparent;font-family:inherit;font-weight:inherit;text-transform:uppercase;cursor:pointer;-ms-flex-pack:justify;justify-content:space-between;font-size:.75rem;font-weight:500;height:100%;white-space:nowrap}\\@media (hover:hover){.cwc-topnav-menu__item:hover{color:var(--cwc-topnav-menu-item-text-color-hover,var(--cwc-color-grayscale-white,#fff))}}.cwc-topnav-menu__item.active{color:var(--cwc-topnav-menu-item-active-text-color,var(--cwc-color-grayscale-white,#fff));background-color:var(--cwc-topnav-menu-item-active-bg-color,var(--cwc-color-ui-primary-darkest-alpha-eighty,rgba(0,27,58,.8)));font-weight:700}.cwc-topnav-menu__slider{display:block;background-color:transparent;height:3px;position:absolute;bottom:0;-webkit-transition:left .25s ease-out;transition:left .25s ease-out}[dir=ltr] .cwc-topnav-menu__chevron{margin-left:.25rem}[dir=rtl] .cwc-topnav-menu__chevron{margin-right:.25rem}.cwc-topnav-menu__chevron{-webkit-margin-start:.25rem;margin-inline-start:.25rem;font-size:.75rem}.cwc-topnav-menu__chevron:before{content:\\\"\\\";font-family:dls-icons!important;speak:none;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host(.cwc-topnav-menu--positive) .cwc-topnav-menu__item{color:var(--cwc-topnav-menu-item-positive-text-color,var(--cwc-color-ui-primary-darkest-alpha-eighty,rgba(0,27,58,.8)))}\\@media (hover:hover){:host(.cwc-topnav-menu--positive) .cwc-topnav-menu__item:hover{color:var(--cwc-topnav-menu-item-positive-text-color-hover,var(--cwc-color-ui-primary-darkest,#001b3a))}}:host(.cwc-topnav-menu--positive) .cwc-topnav-menu__item.active{color:var(--cwc-topnav-menu-item-positive-text-color-active,var(--cwc-color-ui-primary-darkest,#001b3a));background-color:var(--cwc-topnav-menu-item-positive-bg-color-active,var(--cwc-color-grayscale-black-alpha-ten,rgba(0,0,0,.1)))}\\@media (max-width:767px){[dir=ltr] :host(.collapsable){left:0}[dir=rtl] :host(.collapsable){right:0}[dir=ltr] :host(.collapsable){padding-right:5px}[dir=rtl] :host(.collapsable){padding-left:5px}:host(.collapsable){display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;position:fixed;top:54px;inset-inline-start:0;width:220px;height:calc(100vh - 54px);pointer-events:none;-webkit-padding-end:5px;padding-inline-end:5px}:host(.not-collapsable),:host(.v2.not-collapsable){height:54px;-ms-flex-positive:1;flex-grow:1;-ms-flex-pack:justify;justify-content:space-between;padding:0 .5rem}.cwc-topnav-menu__sidenav{margin-top:-54px;height:calc(100% + 54px);width:100%}.cwc-topnav-menu__item{padding:0 .5rem}.cwc-topnav-menu__item.collapsable{display:none}}:host(.v2){background-color:transparent;height:100%}:host(.v2) .cwc-topnav-menu__slider{background-color:var(--cwc-elmt-header-slider-color,var(--cwc-color-brand-secondary,#ee3d42))}:host(.v2) .cwc-topnav-menu__item{font-size:1rem;text-transform:none;font-weight:400}\\@media (max-width:767px){:host(.v2) .cwc-topnav-menu__item{font-size:.75rem}}:host(.v2) .cwc-topnav-menu__item.active{background-color:transparent;font-weight:500}:host(.v2.cwc-topnav-menu--positive) .cwc-topnav-menu__item.active{background-color:transparent}\";\n  }\n\n};\nexport { TopnavMenu as cwc_topnav_menu };","map":null,"metadata":{},"sourceType":"module"}