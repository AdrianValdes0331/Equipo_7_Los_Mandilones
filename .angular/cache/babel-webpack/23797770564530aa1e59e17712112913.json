{"ast":null,"code":"import _asyncToGenerator from \"D:/Equipo_7_Los_Mandilones/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './core-85189c77.js';\nimport { i as initBasics, d as destroyBasics } from './commonComponentFeatures-b771e888.js';\nimport { s as setAttributes } from './helpers-bb43a8d9.js';\nconst Gallery = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.touchstartX = 0;\n    this.touchendX = 0;\n    this.galleryCss = `\n  .cwc-gallery__modal {\n    display: block;\n    background-color: rgba(0, 0, 0, .6);\n    position: fixed;\n    inset-block-start: 0;\n    inset-inline-start: 0;\n    width: 100vw;\n    height: 100vh;\n    z-index: 2002;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    opacity: 1;\n    pointer-events: all;\n    transition: opacity 0.33s;\n  }\n  .cwc-gallery__container {\n    max-width: 784px;\n    margin: 0 auto;\n    box-shadow: none;\n    position: relative;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n  }\n  .cwc-gallery__close-button {\n    background: none;\n    border: none;\n    color: rgba(255, 255, 255, .8);\n    display: block;\n    margin: 0;\n    padding: 0;\n    position: absolute;\n    inset-inline-end: 1.5rem;\n    inset-block-start: 1.5rem;\n    z-index: 1;\n    cursor: pointer;\n    font-size: 1.5rem;\n  }\n  .cwc-gallery__close-button:hover,\n  .cwc-gallery__close-button:focus {\n    color: rgba(255, 255, 255, 1);\n  }\n  .cwc-gallery__controller {\n    font-size: 2.5rem;\n    position: fixed;\n    color: rgba(255, 255, 255, .8);\n    z-index: 1;\n    background: transparent;\n    cursor: pointer;\n  }\n  .cwc-gallery__controller:hover,\n  .cwc-gallery__controller:focus {\n    color: rgba(255, 255, 255, 1);\n  }\n  .cwc-gallery__controller--previous {\n    inset-inline-start: 8%;\n  }\n  .cwc-gallery__controller--next {\n    inset-inline-end: 8%;\n    text-align: end;\n  }\n  .cwc-gallery__caption {\n    display: inline-block;\n    color: white;\n    font-size: 0.875rem;\n  }\n  .cwc-gallery__caption-container {\n    display: flex;\n    width: 100%;\n    padding: 0.75rem;\n    justify-content: space-between;\n    box-sizing: border-box;\n  }\n  .cwc-gallery__cta {\n    padding: 0 0.75rem 0.75rem;\n    display: block;\n    box-sizing: border-box;\n  }\n  .cwc-gallery__cta--center {\n    text-align: center;\n  }\n  .cwc-gallery__cta--start {\n    text-align: start;\n  }\n  .cwc-gallery__cta--end {\n    text-align: end;\n  }\n  .cwc-gallery__footer {\n    position: absolute;\n    inset-block-end: 0;\n    background: #333;\n    width: 100%;\n    box-sizing: border-box;\n    background: rgba(0, 0, 0, .6);\n  }\n  .cwc-gallery__counter {\n    display: inline-block;\n    color: white;\n    font-size: 0.875rem;\n    direction: ltr;\n  }\n  .cwc-gallery__full-pic {\n    width: 100%;\n    object-fit: contain;\n    max-height: 90vh;\n    background-color: transparent;\n    filter: drop-shadow(0 1px 3px rgba(0, 0, 0, .25));\n    margin: auto;\n  }\n  .cwc-gallery__full-pic.animate-even {\n    animation-name: change-even;\n    animation-duration: 0.4s;\n  }\n  .cwc-gallery__full-pic.animate-odd {\n    animation-name: change-odd;\n    animation-duration: 0.4s;\n  }\n  .cwc-hidden {\n    opacity: 0;\n    pointer-events: none;\n  }\n\n  @media (max-width: 767px) {\n    .cwc-gallery__modal {\n      flex-wrap: wrap;\n    }\n    .cwc-gallery__controller {\n      position: initial;\n      margin: 1.5rem;\n      width: 30%;\n    }\n    .cwc-gallery__full-pic {\n      margin-top: 72px;\n    }\n  }\n  @keyframes change-odd {\n    0% {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0.2;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n\n  @keyframes change-even {\n    0% {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0.2;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n  `;\n    /**\n     * The design version of the framework\n     */\n\n    this.designVersion = null;\n    /**\n     * Determines if content should be rendered in RTL mode\n     */\n\n    this.rtl = false;\n    /**\n     * Shows text label on the thumbnail\n     */\n\n    this.showLabel = true;\n    /**\n     * Translation for sepator in counter, equivalent of english 'of'\n     */\n\n    this.counterSeparator = 'of';\n    /**\n     * Render CTA in footer of image detail\n     */\n\n    this.cta = false;\n    /**\n     * Where to place CTA\n     */\n\n    this.ctaPosition = 'start';\n    /**\n     * Button variant of CTA\n     */\n\n    this.ctaVariant = 'regular';\n\n    this.touchStart = e => {\n      this.touchstartX = e.changedTouches[0].screenX;\n    };\n\n    this.touchEnd = e => {\n      this.touchendX = e.changedTouches[0].screenX;\n      this.handleGesure();\n    }; // Controling with keyboard\n\n\n    this.keyboardEvents = ev => {\n      if (ev.key === 'Escape') {\n        this.closeModal();\n      } else if (ev.key === 'ArrowRight') {\n        this.handleNext();\n      } else if (ev.key === 'ArrowLeft') {\n        this.handlePrevious();\n      }\n    };\n\n    this.onSlotChange = () => {\n      this.images = this.host.querySelectorAll('cwc-gallery-image');\n    };\n\n    this.cwcCtaClicked = createEvent(this, \"cwcCtaClicked\", 7);\n  }\n\n  setVariant(newValue) {\n    this.images.forEach(item => {\n      item['showLabel'] = newValue;\n    });\n  }\n  /**\n   * Shows clicked image in modal\n   */\n\n\n  imageClick(event) {\n    // passing image details\n    this.activeImage.setAttribute('src', event.detail[0]);\n    this.activeImage.setAttribute('alt', event.detail[1]);\n    this.activeImageUrl = event.detail[0];\n    this.caption.innerHTML = event.detail[1];\n    this.activeImageIndex = event.detail[2];\n    this.activeImageId = event.detail[3];\n    this.modal.classList.remove('cwc-hidden'); // hiding control arrows when on start or end\n\n    if (this.activeImageIndex + 1 === this.images.length) {\n      this.nextControler.classList.add('cwc-hidden');\n    } else if (this.activeImageIndex === 0) {\n      this.previousControler.classList.add('cwc-hidden');\n    } // listening for key events for closing or moving to another image\n\n\n    window.addEventListener('keydown', this.keyboardEvents); // listening to swipes\n\n    this.activeImage.addEventListener('touchstart', this.touchStart, false);\n    this.activeImage.addEventListener('touchend', this.touchEnd, false);\n  }\n  /**\n   * Changing images on swipe\n   */\n\n\n  handleGesure() {\n    if (this.touchendX <= this.touchstartX) {\n      this.handleNext();\n    } else if (this.touchendX >= this.touchstartX) {\n      this.handlePrevious();\n    }\n  }\n  /**\n   * Closing modal with image preview\n   */\n\n\n  closeModal() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.modal.classList.add('cwc-hidden');\n\n      _this.nextControler.classList.remove('cwc-hidden');\n\n      _this.previousControler.classList.remove('cwc-hidden');\n\n      window.removeEventListener('keydown', _this.keyboardEvents);\n\n      _this.activeImage.removeEventListener('touchstart', _this.touchStart);\n\n      _this.activeImage.removeEventListener('touchend', _this.touchEnd);\n    })();\n  }\n\n  handleNext() {\n    if (this.rtl) {\n      if (!(this.activeImageIndex === 0)) {\n        this.imageChange(-1);\n      }\n    } else {\n      if (!(this.activeImageIndex + 1 === this.images.length)) {\n        this.imageChange(1);\n      }\n    }\n  }\n\n  handlePrevious() {\n    if (this.rtl) {\n      if (!(this.activeImageIndex + 1 === this.images.length)) {\n        this.imageChange(1);\n      }\n    } else {\n      if (!(this.activeImageIndex === 0)) {\n        this.imageChange(-1);\n      }\n    }\n  } // Assings index numbers to all images and pass showLabel property\n\n\n  assingIndex() {\n    const arr = Array.from(this.images);\n    arr.forEach((item, index) => {\n      item.setAttribute('index', `${index}`);\n      item.setAttribute('show-label', `${this.showLabel}`);\n    });\n  } // Handles image change\n\n\n  imageChange(change) {\n    this.activeImage.classList.toggle('animate-even');\n    this.activeImage.classList.toggle('animate-odd');\n    this.activeImageIndex = this.activeImageIndex + change;\n    setTimeout(() => {\n      const url = this.images[this.activeImageIndex].getAttribute('src');\n      this.activeImageUrl = url;\n      this.activeImage.setAttribute('src', `${url}`);\n      this.activeImage.setAttribute('alt', `${this.images[this.activeImageIndex].getAttribute('caption')}`);\n      this.caption.innerHTML = this.images[this.activeImageIndex].getAttribute('caption');\n      this.activeImageId = this.images[this.activeImageIndex].getAttribute('image-id');\n\n      if (this.activeImageIndex + 1 === this.images.length) {\n        this.nextControler.classList.add('cwc-hidden');\n      } else if (this.activeImageIndex === 0) {\n        this.previousControler.classList.add('cwc-hidden');\n      } else {\n        this.nextControler.classList.remove('cwc-hidden');\n        this.previousControler.classList.remove('cwc-hidden');\n      }\n    }, 200);\n  }\n\n  ctaClicked() {\n    this.cwcCtaClicked.emit([this.activeImageId, this.activeImageUrl]);\n  }\n\n  createGalleryStyles() {\n    // check if it's already there\n    let stylesElement = document.querySelector('#cwcGalleryStyles');\n\n    if (!stylesElement) {\n      stylesElement = document.createElement('style');\n      setAttributes(stylesElement, {\n        type: 'text/css',\n        id: 'cwcGalleryStyles'\n      });\n      stylesElement.appendChild(document.createTextNode(this.galleryCss));\n      document.querySelector('head').appendChild(stylesElement);\n    }\n  }\n\n  componentWillLoad() {\n    initBasics(this);\n    this.images = this.host.querySelectorAll('cwc-gallery-image');\n  }\n\n  componentDidLoad() {\n    this.images = this.host.querySelectorAll('cwc-gallery-image');\n    this.assingIndex(); // append it to the body\n\n    document.querySelector('body').appendChild(this.modal); // append DOM layer styles\n\n    this.createGalleryStyles(); // add an event listener to check if there has been change in slot\n\n    const slot = this.host.shadowRoot.querySelector('slot');\n    slot.addEventListener('slotchange', this.onSlotChange);\n  }\n\n  disconnectedCallback() {\n    destroyBasics(this);\n    const slot = this.host.shadowRoot.querySelector('slot');\n\n    if (slot) {\n      slot.removeEventListener('slotchange', this.onSlotChange);\n    }\n  }\n\n  render() {\n    return h(Host, {\n      class: `${this.designVersion}`\n    }, h(\"div\", {\n      class: \"cwc-gallery__images\"\n    }, h(\"slot\", null)), h(\"div\", {\n      class: \"cwc-gallery__modal cwc-hidden\",\n      ref: el => this.modal = el,\n      dir: this.rtl ? 'rtl' : 'ltr'\n    }, h(\"figure\", {\n      class: \"cwc-gallery__container\"\n    }, h(\"img\", {\n      class: \"cwc-gallery__full-pic animate-odd\",\n      ref: el => this.activeImage = el\n    }), h(\"div\", {\n      class: \"cwc-gallery__footer\"\n    }, h(\"div\", {\n      class: \"cwc-gallery__caption-container\"\n    }, h(\"figcaption\", {\n      class: \"cwc-gallery__caption\",\n      ref: el => this.caption = el\n    }), h(\"div\", {\n      class: \"cwc-gallery__counter\"\n    }, (this.rtl ? this.images.length : this.activeImageIndex + 1) + ' ' + this.counterSeparator + ' ' + (this.rtl ? this.activeImageIndex + 1 : this.images.length))), this.cta && h(\"cwc-button\", {\n      designVersion: this.designVersion,\n      class: `cwc-gallery__cta cwc-gallery__cta--${this.ctaPosition}`,\n      leadingIcon: this.ctaLeadingIcon,\n      variant: this.ctaVariant,\n      onClick: () => this.ctaClicked()\n    }, this.ctaLabel))), h(\"cwc-icon\", {\n      designVersion: this.designVersion,\n      class: \"cwc-gallery__close-button\",\n      name: \"close\",\n      onClick: () => {\n        this.closeModal();\n      }\n    }), h(\"cwc-icon\", {\n      designVersion: this.designVersion,\n      class: \"cwc-gallery__controller cwc-gallery__controller--previous\",\n      ref: el => this.previousControler = el,\n      name: this.rtl ? 'arrow-right-straight' : 'arrow-left-straight',\n      onClick: () => {\n        this.imageChange(-1);\n      }\n    }), h(\"cwc-icon\", {\n      designVersion: this.designVersion,\n      class: \"cwc-gallery__controller cwc-gallery__controller--next\",\n      ref: el => this.nextControler = el,\n      name: this.rtl ? 'arrow-left-straight' : 'arrow-right-straight',\n      onClick: () => {\n        this.imageChange(1);\n      }\n    })));\n  }\n\n  get host() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"showLabel\": [\"setVariant\"]\n    };\n  }\n\n  static get style() {\n    return \"*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.cwc-gallery__images{display:grid;grid-template-columns:repeat(auto-fill,minmax(200px,1fr));grid-gap:1rem}\";\n  }\n\n};\nexport { Gallery as cwc_gallery };","map":null,"metadata":{},"sourceType":"module"}