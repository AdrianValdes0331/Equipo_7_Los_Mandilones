{"ast":null,"code":"import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './core-85189c77.js';\nimport { i as initBasics, d as destroyBasics } from './commonComponentFeatures-b771e888.js';\nconst CwcRadio = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The design version of the framework\n     */\n\n    this.designVersion = null;\n    /**\n     * Specify whether component should render from right to left\n     */\n\n    this.rtl = false;\n    /**\n     * When set to true the element is disabled\n     */\n\n    this.disabled = false;\n    /**\n     * Status of the form field.\n     */\n\n    this.status = 'regular';\n    /**\n     * When set to true the radio checked\n     */\n\n    this.checked = false;\n\n    this.handleValueChange = () => {\n      this.inputElement.focus();\n      this.cwcClick.emit(this.value);\n    };\n\n    this.onFocus = () => {\n      this.cwcFocus.emit();\n    };\n\n    this.onBlur = () => {\n      this.cwcBlur.emit();\n    };\n\n    this.cwcClick = createEvent(this, \"cwcClick\", 7);\n    this.cwcKeyboardEvent = createEvent(this, \"cwcKeyboardEvent\", 7);\n    this.cwcFocus = createEvent(this, \"cwcFocus\", 7);\n    this.cwcBlur = createEvent(this, \"cwcBlur\", 7);\n  }\n  /**\n   * Method called on value changes\n   */\n\n\n  setValue(newValue) {\n    if (newValue && !this.disabled) {\n      this.inputElement.focus();\n    }\n  }\n  /**\n   * Triggered when key released.\n   * @param event Event details\n   */\n\n\n  handleKeyDown(ev) {\n    if (ev.key !== 'Tab') {\n      ev.preventDefault();\n    }\n  }\n  /**\n   * Triggered when key pressed.\n   * @param event Event details\n   */\n\n\n  handleKeyUp(ev) {\n    if (ev.key !== 'Tab') {\n      ev.preventDefault();\n    }\n\n    this.cwcClick.emit(this.value);\n    this.cwcKeyboardEvent.emit(ev.key);\n  }\n\n  componentWillLoad() {\n    initBasics(this);\n  }\n\n  disconnectedCallback() {\n    destroyBasics(this);\n  }\n\n  render() {\n    return h(Host, {\n      class: this.designVersion\n    }, h(\"div\", {\n      onClick: this.handleValueChange\n    }, h(\"input\", {\n      ref: value => this.inputElement = value,\n      role: \"radio\",\n      value: this.value,\n      class: this.status,\n      type: \"radio\",\n      name: this.name,\n      checked: this.checked,\n      disabled: this.disabled,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur\n    }), h(\"label\", null, h(\"slot\", null))));\n  }\n\n  get host() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"checked\": [\"setValue\"]\n    };\n  }\n\n  static get style() {\n    return \"*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host{display:inline-block;position:relative}input[type=radio]{position:absolute;opacity:0;z-index:1;width:16px;height:22px;margin-right:.375rem}input[type=radio]+label{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center;position:relative;height:16px;font-size:16px}[dir=ltr] input[type=radio]+label:before{margin-right:.375rem}[dir=rtl] input[type=radio]+label:before{margin-left:.375rem}input[type=radio]+label:before{content:\\\" \\\";display:inline-block;width:16px;height:16px;-webkit-box-sizing:border-box;box-sizing:border-box;border-width:1px;border-color:var(--cwc-radio-border-color,var(--cwc-color-grayscale-lightish,#b0b0b0));border-style:solid;border-radius:8px;-webkit-margin-end:.375rem;margin-inline-end:.375rem;background-color:var(--cwc-radio-background-color,var(--cwc-color-grayscale-white,#fff))}input[type=radio]+label:hover:before,input[type=radio]:focus+label:before,input[type=radio]:hover+label:before{background-color:var(--cwc-radio-hover-background-color,var(--cwc-color-grayscale-lightest,#e4e4e4))}[dir=ltr] input[type=radio]:checked+label:after{left:4px}[dir=rtl] input[type=radio]:checked+label:after{right:4px}input[type=radio]:checked+label:after{content:\\\" \\\";top:4px;inset-inline-start:4px;position:absolute;width:8px;height:8px;background-color:var(--cwc-radio-checked-background-color,var(--cwc-color-links,#3fa9f5));border-radius:4px;-webkit-animation-name:contentOpacity;animation-name:contentOpacity;-webkit-animation-duration:.33s;animation-duration:.33s}\\@-webkit-keyframes contentOpacity{0%{opacity:.6}to{opacity:1}}\\@keyframes contentOpacity{0%{opacity:.6}to{opacity:1}}input[type=radio]:checked.error+label:after{background-color:var(--cwc-radio-checked-error-background-color,var(--cwc-color-status-error-dark,#b71c1c))}input[type=radio]:checked.warning+label:after{background-color:var(--cwc-radio-checked-warning-background-color,var(--cwc-color-status-warning-dark,#ff8f00))}input[type=radio]:checked.success+label:after{background-color:var(--cwc-radio-checked-success-background-color,var(--cwc-color-status-success-dark,#1b5e20))}input[type=radio].error+label:before{border-color:var(--cwc-radio-error-border-color,var(--cwc-color-status-error,#ee3d42))}input[type=radio].warning+label:before{border-color:var(--cwc-radio-warning-border-color,var(--cwc-color-status-warning,#fbb03b))}input[type=radio].success+label:before{border-color:var(--cwc-radio-success-border-color,var(--cwc-color-status-success,#7ac943))}input[type=radio][disabled]+label:before{background-color:var(--cwc-radio-disabled-border-color,var(--cwc-color-grayscale-light,#d6d6d6))}\";\n  }\n\n};\nexport { CwcRadio as cwc_radio };","map":null,"metadata":{},"sourceType":"module"}