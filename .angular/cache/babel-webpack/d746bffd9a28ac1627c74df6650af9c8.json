{"ast":null,"code":"import { r as registerInstance, h, H as Host, g as getElement } from './core-85189c77.js';\nimport { i as initBasics, d as destroyBasics } from './commonComponentFeatures-b771e888.js';\nconst Table = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef); // PROPS -------\n\n    /**\n     * The design version of the framework\n     */\n\n    this.designVersion = null;\n    /**\n     * Display text right-to-left if true\n     */\n\n    this.rtl = false;\n    /**\n     * Number of column where the cell starts\n     */\n\n    this.colstart = 'auto';\n    /**\n     * Number of columns that the cell will span\n     */\n\n    this.colspan = 1;\n    /**\n     * Number of row where the cell starts\n     */\n\n    this.rowstart = 'auto';\n    /**\n     * Number of rows that the cell will span\n     */\n\n    this.rowspan = 1; // mobile props\n\n    /**\n     * Number of column where the cell starts\n     */\n\n    this.mobileColstart = this.colstart;\n    /**\n     * Number of columns that the cell will span on mobile\n     */\n\n    this.mobileColspan = this.colspan;\n    /**\n     * Number of row where the cell starts on mobile\n     */\n\n    this.mobileRowstart = this.rowstart;\n    /**\n     * Number of rows that the cell will span on mobile\n     */\n\n    this.mobileRowspan = this.rowspan; // alignment props\n\n    /**\n     * Vertical Alignent of the contents\n     */\n\n    this.alignItems = 'inherit';\n    /**\n     * Horizontal justification of the contents\n     */\n\n    this.justifyItems = 'inherit'; // METHODS ------\n\n    this.renderCellStyle = () => {\n      const styles = `\n  :host{\n    grid-column-start: ` + this.colstart + `;\n    grid-column-end: span ` + this.colspan + `;\n    grid-row-start: ` + this.rowstart + `;\n    grid-row-end: span ` + this.rowspan + `;\n    align-items: ` + this.alignItems + `;\n    justify-items: ` + this.justifyItems + `;\n  }\n  @media (max-width: 767px) {\n    :host{\n      grid-column-start: ` + this.mobileColstart + `;\n      grid-column-end: span ` + this.mobileColspan + `;\n      grid-row-start: ` + this.mobileRowstart + `;\n      grid-row-end: span ` + this.mobileRowspan + `;\n    }\n  }\n  `;\n      return styles;\n    };\n  }\n\n  componentWillLoad() {\n    initBasics(this);\n  }\n\n  disconnectedCallback() {\n    destroyBasics(this);\n  }\n\n  render() {\n    return h(Host, {\n      class: this.designVersion\n    }, h(\"style\", {\n      id: \"cellStyles\",\n      type: \"text/css\"\n    }, this.renderCellStyle()), h(\"slot\", null));\n  }\n\n  get host() {\n    return getElement(this);\n  }\n\n  static get style() {\n    return \"*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host{display:grid;grid-template-columns:1fr;grid-template-rows:1fr}slot{display:block}\";\n  }\n\n};\nexport { Table as cwc_cell };","map":null,"metadata":{},"sourceType":"module"}