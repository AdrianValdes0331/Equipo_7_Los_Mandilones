{"ast":null,"code":"import { hasEntity } from './hasEntity';\nimport { isArray } from './isArray'; // @internal\n\nexport function hasActiveState(state) {\n  return state.hasOwnProperty('active');\n} // @internal\n\nexport function isMultiActiveState(active) {\n  return isArray(active);\n} // @internal\n\nexport function resolveActiveEntity({\n  active,\n  ids,\n  entities\n}) {\n  if (isMultiActiveState(active)) {\n    return getExitingActives(active, ids);\n  }\n\n  if (hasEntity(entities, active) === false) {\n    return null;\n  }\n\n  return active;\n} // @internal\n\nexport function getExitingActives(currentActivesIds, newIds) {\n  const filtered = currentActivesIds.filter(id => newIds.indexOf(id) > -1);\n  /** Return the same reference if nothing has changed */\n\n  if (filtered.length === currentActivesIds.length) {\n    return currentActivesIds;\n  }\n\n  return filtered;\n} //# sourceMappingURL=activeState.js.map","map":null,"metadata":{},"sourceType":"module"}