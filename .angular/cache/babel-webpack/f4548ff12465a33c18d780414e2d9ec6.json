{"ast":null,"code":"import { r as registerInstance, h, g as getElement } from './core-85189c77.js';\nimport { i as initBasics, d as destroyBasics } from './commonComponentFeatures-b771e888.js';\nconst CwcTag = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The design version of the framework\n     */\n\n    this.designVersion = null;\n    /**\n     * Variant is used to get a different style for the element\n     */\n\n    this.variant = 'regular';\n    /**\n     * If true tag can be closed\n     */\n\n    this.allowClose = false;\n    /**\n     * Specify whether component should render from right to left\n     */\n\n    this.rtl = false;\n    /**\n     * If tags can be selected\n     */\n\n    this.selectable = false;\n    /**\n     * Pass props to children elements\n     */\n\n    this.passPropsToChildren = () => {\n      this.tags = this.host.querySelectorAll('cwc-tag');\n      this.tags.forEach(item => {\n        item['variant'] = this.variant;\n        item['allowClose'] = this.allowClose;\n        item['rtl'] = this.rtl;\n        item['selectable'] = this.selectable;\n      });\n    };\n  }\n\n  setSelectable(selectable) {\n    this.tags.forEach(item => {\n      item['selectable'] = selectable;\n    });\n  }\n\n  setVariant(variant) {\n    this.tags.forEach(item => {\n      item['variant'] = variant;\n    });\n  }\n\n  setAllowClose(allowClose) {\n    this.tags.forEach(item => {\n      item['allowClose'] = allowClose;\n    });\n  }\n\n  setRtl(rtl) {\n    this.tags.forEach(item => {\n      item['rtl'] = rtl;\n    });\n  }\n\n  componentWillLoad() {\n    initBasics(this);\n  }\n  /**\n   * Call when component did load (lifecycle)\n   */\n\n\n  componentDidLoad() {\n    this.registerSlotChangeHandler();\n    this.passPropsToChildren();\n  }\n\n  disconnectedCallback() {\n    destroyBasics(this);\n  }\n  /**\n   * Register listener on event when tags are changed\n   */\n\n\n  registerSlotChangeHandler() {\n    const optionsSlot = this.host.shadowRoot.querySelector('slot');\n    optionsSlot.addEventListener('slotchange', () => {\n      this.passPropsToChildren();\n    });\n  }\n\n  render() {\n    return h(\"div\", {\n      class: this.designVersion\n    }, h(\"slot\", null));\n  }\n\n  get host() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"selectable\": [\"setSelectable\"],\n      \"variant\": [\"setVariant\"],\n      \"allowClose\": [\"setAllowClose\"],\n      \"rtl\": [\"setRtl\"]\n    };\n  }\n\n  static get style() {\n    return \"*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host{display:inline-block}\";\n  }\n\n};\nexport { CwcTag as cwc_tags };","map":null,"metadata":{},"sourceType":"module"}