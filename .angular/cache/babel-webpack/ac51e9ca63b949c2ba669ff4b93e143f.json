{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/pingu/Documents/Tec/Carrera Tec sem 6/parcial_2/Cemex_Materiales/Cemex_Login_V1.0/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { r as registerInstance, c as createEvent, h, g as getElement } from './core-85189c77.js';\nimport { i as initBasics, d as destroyBasics } from './commonComponentFeatures-b771e888.js';\nconst Alert = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The design version of the framework\n     */\n\n    this.designVersion = null;\n    /**\n     * Prevent alert from automatic closing\n     */\n\n    this.keepOpen = false;\n    /**\n     * Specify duration as a number in miliseconds. Default is 10000 (10 sec)\n     */\n\n    this.duration = 10000;\n    /**\n     * Specify whether component should render from right to left\n     */\n\n    this.rtl = false;\n    /**\n     * Variant is used to get a different style for the element\n     */\n\n    this.variant = 'info';\n    /**\n     * State of the alert - if it is visible or not\n     */\n\n    this.hidden = false;\n\n    this.handleClose = () => {\n      this.hidden = true;\n      this.showEvent.emit(false);\n    };\n    /**\n     * clears the timeout and sets timeoutId to undefined\n     */\n\n\n    this.clearTimeOut = () => {\n      window.clearTimeout(this.timeoutId);\n      this.timeoutId = undefined;\n    };\n    /**\n     * sets the timeout and startTime\n     */\n\n\n    this.setTimeOut = () => {\n      this.startTime = Date.now();\n      this.timeoutId = window.setTimeout(this.handleClose, this.duration);\n    };\n\n    this.handleAlertClick = () => {\n      this.alertClickEvent.emit(true);\n    };\n\n    this.alertClickEvent = createEvent(this, \"cwcAlertClick\", 7);\n    this.showEvent = createEvent(this, \"cwcShow\", 7);\n  }\n\n  resetTimeout() {\n    if (this.timeoutId) {\n      this.clearTimeOut();\n    }\n\n    this.setTimeOut();\n  }\n  /**\n   * Shows alert\n   */\n\n\n  showAlert() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.hidden = false;\n\n      _this.setTimeOut();\n\n      _this.showEvent.emit(true);\n    })();\n  }\n\n  handleOnMouseOver() {\n    if (!this.keepOpen && this.timeoutId) {\n      this.clearTimeOut();\n      this.remainingTime = this.duration - (Date.now() - this.startTime);\n    }\n  }\n\n  handleMouseLeaves() {\n    if (!this.keepOpen) {\n      this.duration = this.remainingTime;\n    }\n  }\n\n  componentWillLoad() {\n    initBasics(this);\n\n    if (!this.hidden) {\n      this.showEvent.emit(true);\n    }\n  }\n\n  componentDidRender() {\n    if (this.keepOpen && this.timeoutId) {\n      this.clearTimeOut();\n    }\n\n    if (!this.keepOpen && !this.timeoutId) {\n      this.setTimeOut();\n    }\n  }\n\n  disconnectedCallback() {\n    destroyBasics(this);\n  }\n\n  render() {\n    return h(\"div\", {\n      class: `cwc-alert-bar ${this.designVersion} cwc-alert-bar--${this.variant} ${this.hidden ? 'hidden' : ''}`,\n      role: \"alert\",\n      \"aria-live\": \"assertive\",\n      dir: this.rtl ? 'rtl' : 'ltr'\n    }, h(\"cwc-icon\", {\n      class: \"cwc-alert-bar__icon\",\n      name: \"notification\",\n      color: \"true-white\",\n      size: \"1rem\"\n    }), h(\"div\", {\n      class: \"cwc-alert-bar__message\"\n    }, h(\"span\", null, this.message), this.ctaMessage ? h(\"span\", {\n      role: \"button\",\n      class: \"cwc-alert-bar__cta\",\n      onClick: this.handleAlertClick\n    }, this.ctaMessage) : null), h(\"button\", {\n      class: \"cwc-alert-bar__close\",\n      onClick: this.handleClose,\n      \"aria-hidden\": \"true\"\n    }, h(\"cwc-icon\", {\n      designVersion: this.designVersion,\n      name: \"close\"\n    }), h(\"span\", {\n      class: \"sr-only\"\n    }, \"Dismiss Alert\")));\n  }\n\n  get host() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"duration\": [\"resetTimeout\"]\n    };\n  }\n\n  static get style() {\n    return \"*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.sr-only{position:absolute;opacity:0;pointer-events:none;width:0;height:0;overflow:hidden}.cwc-alert-bar{display:-ms-flexbox;display:flex;font-size:.75rem;line-height:1rem;min-height:35px;overflow:hidden;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:.5s;transition-duration:.5s;-webkit-transition-timing-function:cubic-bezier(0,1,.5,1);transition-timing-function:cubic-bezier(0,1,.5,1)}.cwc-alert-bar.hidden{min-height:0;max-height:0}.cwc-alert-bar__message{-ms-flex:1 1 auto;flex:1 1 auto;padding:.5625rem 1.5rem;color:var(--cwc-alert-message-color,var(--cwc-color-grayscale-white,#fff));font-family:inherit;font-weight:500}[dir=ltr] .cwc-alert-bar__cta{margin-left:.25rem}[dir=rtl] .cwc-alert-bar__cta{margin-right:.25rem}.cwc-alert-bar__cta{background:none;border:0 none;font-size:.75rem;font-weight:500;color:var(--cwc-alert-message-cta-color,var(--cwc-color-grayscale-white,#fff));outline:0 none;text-decoration:underline;cursor:pointer;line-height:1rem;padding:0;margin:0;-webkit-margin-start:.25rem;margin-inline-start:.25rem;display:inline}.cwc-alert-bar__close{-ms-flex:0 0 auto;flex:0 0 auto;padding:.5rem 1rem;cursor:pointer;background:none;border:none;color:var(--cwc-alert-dismiss-button-color,var(--cwc-color-grayscale-white,#fff))}.cwc-alert-bar__close:focus{outline:0}.cwc-alert-bar__icon{display:none}.cwc-alert-bar--error{background-color:var(--cwc-alert-error-background-color,var(--cwc-color-status-error,#ee3d42))}.cwc-alert-bar--warning{background-color:var(--cwc-alert-warning-background-color,var(--cwc-color-status-warning,#fbb03b))}.cwc-alert-bar--info{background:var(--cwc-alert-info-background-color,var(--cwc-color-status-info,#3fa9f5))}.cwc-alert-bar--success{background:var(--cwc-alert-success-background-color,var(--cwc-color-status-success,#7ac943))}.v2.cwc-alert-bar .cwc-alert-bar__message{padding-left:0;padding-right:0;padding-inline:0}.v2.cwc-alert-bar .cwc-alert-bar__icon{padding:.5rem 1rem;-ms-flex:0 0 auto;flex:0 0 auto;display:inline-block}.cwc-alert-bar[dir=rtl] .cwc-alert-bar__message{font-family:inherit}\";\n  }\n\n};\nexport { Alert as cwc_alert };","map":null,"metadata":{},"sourceType":"module"}