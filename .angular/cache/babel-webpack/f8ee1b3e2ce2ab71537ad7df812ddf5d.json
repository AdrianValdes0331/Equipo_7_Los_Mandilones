{"ast":null,"code":"import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './core-85189c77.js';\nimport { i as initBasics, d as destroyBasics } from './commonComponentFeatures-b771e888.js';\nvar NavKeys = /*#__PURE__*/(() => {\n  (function (NavKeys) {\n    NavKeys[\"ArrowLeft\"] = \"ArrowLeft\";\n    NavKeys[\"ArrowRight\"] = \"ArrowRight\";\n    NavKeys[\"Tab\"] = \"Tab\";\n  })(NavKeys || (NavKeys = {}));\n\n  return NavKeys;\n})();\nconst CwcPagination = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The design version of the framework\n     */\n\n    this.designVersion = null;\n    /**\n     * The number of pagination items to have on either side of the cursor in the pagination.\n     */\n\n    this.cursorBuffer = 2;\n    /**\n     * Specify the active page number (first page = 0)\n     */\n\n    this.activePage = 0;\n    /**\n     * Specify the pagination aria-label\n     */\n\n    this.ariaLabelNav = 'Pagination Navigation';\n    /**\n     * Specify the pagination aria-label for the enumerated pages\n     */\n\n    this.ariaLabelLink = 'Goto Page ';\n    /**\n     * Specify the pagination aria-label for the previous page link\n     */\n\n    this.ariaLabelPrev = 'Goto Previous Page';\n    /**\n     * Specify the pagination aria-label for the next page link\n     */\n\n    this.ariaLabelNext = 'Goto Next Page';\n    /**\n     * Specify the pagination aria-label for the next page link\n     */\n\n    this.ariaLabelCurrent = 'Current Page, Page';\n    /**\n     * Specify total number of pages\n     */\n\n    this.totalPages = 1;\n    /**\n     * Specify whether component should render from right to left\n     */\n\n    this.rtl = false;\n    this.paginationItems = [];\n    this.changeEvent = createEvent(this, \"cwcChange\", 7);\n  }\n  /**\n   * The number of pagination slots required to hold the cursor, its neighbours, and\n   * the first and last entries.\n   */\n\n\n  getBufferedMinimum() {\n    return 1 + this.cursorBuffer + 1 + this.cursorBuffer + 1;\n  }\n\n  changeActivePage(newActivePage) {\n    this.currentPage = Math.max(0, Math.min(this.totalPages, newActivePage));\n  }\n\n  changeTotalPages(newTotalPages, oldTotalPages) {\n    if (oldTotalPages !== newTotalPages) {\n      this.setupPagination();\n    }\n  }\n\n  onValueChanged(newValue, oldValue) {\n    if (oldValue !== newValue) {\n      this.setupPagination();\n    }\n  }\n  /**\n   * Listens to Keydown event on component for arrowkeys navigation\n   */\n\n\n  handleKeyDown(event) {\n    const navKey = event.key;\n\n    if (navKey in NavKeys) {\n      const shadowDOM = this.host.shadowRoot;\n      const allSelectableElements = shadowDOM.querySelectorAll('a');\n      const length = allSelectableElements.length;\n      let next = NavKeys.ArrowRight;\n      let previous = NavKeys.ArrowLeft;\n\n      if (this.rtl) {\n        next = NavKeys.ArrowLeft;\n        previous = NavKeys.ArrowRight;\n      }\n\n      if (!this.currentFocusedElement) {\n        for (let i = 0; i < length && !this.currentFocusedElement; i++) {\n          if (allSelectableElements[i].parentElement === shadowDOM.activeElement.parentElement) {\n            this.currentFocusedElement = i;\n          }\n        }\n      }\n\n      if ((navKey === previous || navKey === NavKeys.Tab && event.shiftKey) && this.currentFocusedElement !== 0) {\n        this.currentFocusedElement--;\n      } else if ((navKey === next || navKey === NavKeys.Tab) && this.currentFocusedElement !== length - 1) {\n        this.currentFocusedElement++;\n      }\n\n      if (navKey !== NavKeys.Tab) {\n        allSelectableElements[this.currentFocusedElement].focus();\n      }\n    }\n  }\n  /**\n   * Lifecycle hook\n   */\n\n\n  componentWillLoad() {\n    initBasics(this);\n  }\n\n  disconnectedCallback() {\n    destroyBasics(this);\n  }\n\n  componentDidLoad() {\n    this.currentPage = this.activePage;\n  }\n\n  onPaginationItemClick(event) {\n    event.preventDefault();\n    this.currentPage = Number(event.target.innerText);\n    this.changeEvent.emit(this.currentPage);\n    this.currentFocusedElement = undefined;\n  }\n\n  onPaginationNextClick(event) {\n    event.preventDefault();\n\n    if (this.currentPage < this.totalPages) {\n      this.currentPage++;\n      this.changeEvent.emit(this.currentPage);\n    }\n\n    this.currentFocusedElement = undefined;\n  }\n\n  onPaginationPrevClick(event) {\n    event.preventDefault();\n\n    if (this.currentPage > 1) {\n      this.currentPage--;\n      this.changeEvent.emit(this.currentPage);\n    }\n\n    this.currentFocusedElement = undefined;\n  }\n\n  getPaginationItem(pageNumber) {\n    return h(\"li\", {\n      class: 'cwc-pagination__item cwc-page-' + pageNumber\n    }, this.currentPage === pageNumber ? h(\"a\", {\n      class: \"active\",\n      onClick: this.onPaginationItemClick.bind(this),\n      href: \"#\",\n      \"aria-label\": this.ariaLabelCurrent + ' ' + pageNumber,\n      \"aria-current\": \"true\"\n    }, pageNumber) : h(\"a\", {\n      href: \"#\",\n      onClick: this.onPaginationItemClick.bind(this),\n      \"aria-label\": this.ariaLabelLink + ' ' + pageNumber\n    }, pageNumber));\n  }\n\n  get spacerElement() {\n    return h(\"li\", {\n      class: \"cwc-pagination__item cwc-pagination__spacer\"\n    }, \"...\");\n  }\n  /**\n   * Create pagination for fewer than 7 items (without spacers)\n   */\n\n\n  initShortPagination() {\n    this.paginationItems = [];\n\n    for (let index = 1; index <= this.totalPages; index++) {\n      this.paginationItems.push(this.getPaginationItem(index));\n    }\n  }\n  /**\n   * Wraps the cursor with neighbouring pagination entries\n   */\n\n\n  fillArrayOfLinks() {\n    // We always show the first entry, page 1, but sometimes the cursor is at #1\n    // We also always show the final entry, but the same applies with the cursor.\n    // When the cursor is next to an end of the pagination, then the buffer is the first or final entry.\n    // \"Spare\" buffer blocks get added to the other side.\n    let pageNumbers = [this.currentPage]; // Add entries to wrap the cursor value\n\n    for (let i = this.cursorBuffer; i > 0; i--) {\n      pageNumbers.push(this.currentPage + i);\n      pageNumbers.push(this.currentPage - i);\n    } // Deal with any overlapping of the bounds\n\n\n    let nextTop = pageNumbers.reduce((a, b) => Math.max(a, b));\n    let nextLow = pageNumbers.reduce((a, b) => Math.min(a, b)); // Anything outside the bounds should be moved within them\n\n    const nudgedNumbers = pageNumbers.map(v => {\n      if (v < 1) {\n        nextTop++;\n        return nextTop > this.totalPages ? null : nextTop;\n      }\n\n      if (v > this.totalPages) {\n        nextLow--;\n        return nextLow < 1 ? null : nextLow;\n      }\n\n      return v;\n    }).filter(slot => slot !== null);\n    nudgedNumbers.push(1);\n    nudgedNumbers.push(this.totalPages); // Just the unique values, please\n\n    pageNumbers = [];\n    /*\n     * I'm doing it the long way here, because the __spreadArray function that the array-spread\n     * operator currently compiles to is trying to create an Array(NaN) when it runs.\n     */\n\n    nudgedNumbers.forEach(item => {\n      if (pageNumbers.indexOf(item) === -1) {\n        pageNumbers.push(item);\n      }\n    });\n    pageNumbers.sort((a, b) => a - b);\n    this.paginationItems = pageNumbers.map(val => this.getPaginationItem(val)); // Now see whether the pagination needs any spacers at the start or end\n\n    if (this.isNotAPairOfContiguousIntegers(pageNumbers[0], pageNumbers[1])) {\n      this.paginationItems.splice(1, 0, this.spacerElement);\n    }\n\n    if (this.isNotAPairOfContiguousIntegers(pageNumbers[pageNumbers.length - 2], pageNumbers[pageNumbers.length - 1])) {\n      this.paginationItems.splice(-1, 0, this.spacerElement);\n    }\n  }\n  /**\n   * Determines if two integers don't sit next to each other in the pagination.\n   */\n\n\n  isNotAPairOfContiguousIntegers(a, b) {\n    return !(Math.abs(a - b) === 1);\n  }\n\n  setupPagination() {\n    if (this.totalPages >= this.getBufferedMinimum()) {\n      this.fillArrayOfLinks();\n    } else {\n      this.initShortPagination();\n    }\n  }\n\n  render() {\n    return h(Host, {\n      role: \"navigation\",\n      \"aria-label\": this.ariaLabelNav\n    }, this.totalPages > 1 ? h(\"ul\", {\n      class: `cwc-pagination ${this.designVersion}`\n    }, h(\"li\", {\n      class: \"cwc-pagination__item cwc-pagination__prev\"\n    }, h(\"a\", {\n      href: \"#\",\n      onClick: this.onPaginationPrevClick.bind(this),\n      \"aria-label\": this.ariaLabelPrev\n    }, h(\"cwc-icon\", {\n      name: this.rtl ? 'arrow-right-straight' : 'arrow-left-straight',\n      color: \"bright-blue\",\n      \"hover-color\": \"bright-blue-dark\",\n      size: \"14px\"\n    }))), this.paginationItems, h(\"li\", {\n      class: \"cwc-pagination__item cwc-pagination__next\",\n      dir: \"ltr\"\n    }, h(\"a\", {\n      href: \"#\",\n      onClick: this.onPaginationNextClick.bind(this),\n      \"aria-label\": this.ariaLabelNext\n    }, h(\"cwc-icon\", {\n      name: this.rtl ? 'arrow-left-straight' : 'arrow-right-straight',\n      color: \"bright-blue\",\n      \"hover-color\": \"bright-blue-dark\",\n      size: \"14px\"\n    })))) : null);\n  }\n\n  get host() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"activePage\": [\"changeActivePage\"],\n      \"totalPages\": [\"changeTotalPages\"],\n      \"currentPage\": [\"onValueChanged\"]\n    };\n  }\n\n  static get style() {\n    return \"*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.font--true-red,.font-color--status-error{color:var(--cwc-color-status-error,#ee3d42)}.font--true-red-dark,.font-color--status-error-dark{color:var(--cwc-color-status-error-dark,#b71c1c)}.font--true-red-light,.font-color--status-error-light{color:var(--cwc-color-status-error-light,#ef9a9a)}.font--true-white,.font-color--grayscale-white{color:var(--cwc-color-grayscale-white,#fff)}.font--true-black,.font-color--grayscale-black{color:var(--cwc-color-grayscale-black,#000)}.font--true-blue,.font-color--ui-primary{color:var(--cwc-color-ui-primary,#003876)}.font--medium-blue,.font-color--primary-dark{color:var(--cwc-color-primary-dark,#002a59)}.font--medium-grey,.font-color--grayscale-medium{color:var(--cwc-color-grayscale-medium,#666)}.font--dark-grey,.font-color--grayscale-dark{color:var(--cwc-color-grayscale-dark,#333)}.font--disabled-grey,.font-color--status-disabled{color:var(--cwc-color-status-disabled,#d6d6d6)}.font--bright-orange,.font-color--status-warning{color:var(--cwc-color-status-warning,#fbb03b)}.font--bright-orange-dark,.font-color--status-warning-dark{color:var(--cwc-color-status-warning-dark,#ff8f00)}.font--bright-orange-light,.font-color--status-warning-light{color:var(--cwc-color-status-warning-light,#ffcc80)}.font--bright-green,.font-color--status-success{color:var(--cwc-color-status-success,#7ac943)}.font--bright-green-dark,.font-color--status-success-dark{color:var(--cwc-color-status-success-dark,#1b5e20)}.font--bright-green-light,.font-color--status-success-light{color:var(--cwc-color-status-success-light,#c5e1a5)}.font--bright-blue,.font-color--status-info{color:var(--cwc-color-status-info,#3fa9f5)}.font--bright-blue-dark,.font-color--status-info-dark{color:var(--cwc-color-status-info-dark,#01579b)}.font--bright-blue-light,.font-color--status-info-light{color:var(--cwc-color-status-info-light,#81d4fa)}.font--deep-blue,.font-color--primary-darkest{color:var(--cwc-color-primary-darkest,#001b3a)}.bg--true-red,.bg-color--status-error{background-color:var(--cwc-color-status-error,#ee3d42)}.bg--true-red-dark,.bg-color--status-error-dark{background-color:var(--cwc-color-status-error-dark,#b71c1c)}.bg--true-red-light,.bg-color--status-error-light{background-color:var(--cwc-color-status-error-light,#ef9a9a)}.bg--true-white,.bg-color--grayscale-white{background-color:var(--cwc-color-grayscale-white,#fff)}.bg--true-black,.bg-color--grayscale-black{background-color:var(--cwc-color-grayscale-black,#000)}.bg--true-blue,.bg-color--ui-primary{background-color:var(--cwc-color-ui-primary,#003876)}.bg--medium-blue,.bg-color--primary-dark{background-color:var(--cwc-color-primary-dark,#002a59)}.bg--medium-grey,.bg-color--grayscale-medium{background-color:var(--cwc-color-grayscale-medium,#666)}.bg--dark-grey,.bg-color--grayscale-dark{background-color:var(--cwc-color-grayscale-dark,#333)}.bg--bright-orange,.bg-color--status-warning{background-color:var(--cwc-color-status-warning,#fbb03b)}.bg--bright-orange-dark,.bg-color--status-warning-dark{background-color:var(--cwc-color-status-warning-dark,#ff8f00)}.bg--bright-orange-dlight,.bg-color--status-warning-light{background-color:var(--cwc-color-status-warning-light,#ffcc80)}.bg--bright-green,.bg-color--status-success{background-color:var(--cwc-color-status-success,#7ac943)}.bg--bright-green-dark,.bg-color--status-success-dark{background-color:var(--cwc-color-status-success-dark,#1b5e20)}.bg--bright-green-light,.bg-color--status-success-light{background-color:var(--cwc-color-status-success-light,#c5e1a5)}.bg--bright-blue,.bg-color--status-info{background-color:var(--cwc-color-status-info,#3fa9f5)}.bg--bright-blue-dark,.bg-color--status-info-dark{background-color:var(--cwc-color-status-info-dark,#01579b)}.bg--bright-blue-light,.bg-color--status-info-light{background-color:var(--cwc-color-status-info-light,#81d4fa)}.bg--deep-blue,.bg-color--primary-darkest{background-color:var(--cwc-color-primary-darkest,#001b3a)}.bg--disabled-grey,.bg-color--status-disabled{background-color:var(--cwc-color-status-disabled,#d6d6d6)}.border--true-red,.border-color--status-error{border-color:var(--cwc-color-status-error,#ee3d42)}.border--true-red-dark,.border-color--status-error-dark{border-color:var(--cwc-color-status-error-dark,#b71c1c)}.border--true-red-light,.border-color--status-error-light{border-color:var(--cwc-color-status-error-light,#ef9a9a)}.border--true-white,.border-color--grayscale-white{border-color:var(--cwc-color-grayscale-white,#fff)}.border--true-black,.border-color--grayscale-black{border-color:var(--cwc-color-grayscale-black,#000)}.border--true-blue,.border-color--ui-primary{border-color:var(--cwc-color-ui-primary,#003876)}.border--medium-blue,.border-color--primary-dark{border-color:var(--cwc-color-primary-dark,#002a59)}.border--medium-grey,.border-color--grayscale-mediun{border-color:var(--cwc-color-grayscale-medium,#666)}.border--disabled-grey,.border-color--status-disabled{border-color:var(--cwc-color-status-disabled,#d6d6d6)}.border--dark-grey,.border-color--grayscale-dark{border-color:var(--cwc-color-grayscale-dark,#333)}.border--bright-orange,.border-color--status-warning{border-color:var(--cwc-color-status-warning,#fbb03b)}.border--bright-orange-dark,.border-color--status-warning-dark{border-color:var(--cwc-color-status-warning-dark,#ff8f00)}.border--bright-orange-light,.border-color--status-warning-light{border-color:var(--cwc-color-status-warning-light,#ffcc80)}.border--bright-green,.border-color--status-success{border-color:var(--cwc-color-status-success,#7ac943)}.border--bright-green-dark,.border-color--status-success-dark{border-color:var(--cwc-color-status-success-dark,#1b5e20)}.border--bright-green-light,.border-color--status-success-light{border-color:var(--cwc-color-status-success-light,#c5e1a5)}.border--bright-blue,.border-color--status-info{border-color:var(--cwc-color-status-info,#3fa9f5)}.border--bright-blue-dark,.border-color--status-info-dark{border-color:var(--cwc-color-status-info-dark,#01579b)}.border--bright-blue-light,.border-color--status-info-light{border-color:var(--cwc-color-status-info-light,#81d4fa)}.border--deep-blue,.border-color--primary-darkest{border-color:var(--cwc-color-primary-darkest,#001b3a)}.fill--true-red,.fill-color--status-error{fill:var(--cwc-color-status-error,#ee3d42)}.fill--true-red-dark,.fill-color--status-error-dark{fill:var(--cwc-color-status-error-dark,#b71c1c)}.fill--true-red-light,.fill-color--status-error-light{fill:var(--cwc-color-status-error-light,#ef9a9a)}.fill--true-white,.fill-color--grayscale-white{fill:var(--cwc-color-grayscale-white,#fff)}.fill--true-black,.fill-color--grayscale-black{fill:var(--cwc-color-grayscale-black,#000)}.fill--true-blue,.fill-color--ui-primary{fill:var(--cwc-color-ui-primary,#003876)}.fill--medium-blue,.fill-color--primary-dark{fill:var(--cwc-color-primary-dark,#002a59)}.fill--medium-grey,.fill-color--grayscale-medium{fill:var(--cwc-color-grayscale-medium,#666)}.fill--dark-grey,.fill-color--grayscale-dark{fill:var(--cwc-color-grayscale-dark,#333)}.fill--disabled-grey,.fill-color--status-disabled{fill:var(--cwc-color-status-disabled,#d6d6d6)}.fill--bright-orange,.fill-color--status-warning{fill:var(--cwc-color-status-warning,#fbb03b)}.fill--bright-orange-dark,.fill-color--status-warning-dark{fill:var(--cwc-color-status-warning-dark,#ff8f00)}.fill--bright-orange-light,.fill-color--status-warning-light{fill:var(--cwc-color-status-warning-light,#ffcc80)}.fill--bright-green,.fill-color--status-success{fill:var(--cwc-color-status-success,#7ac943)}.fill--bright-green-dark,.fill-color--status-success-dark{fill:var(--cwc-color-status-success-dark,#1b5e20)}.fill--bright-green-light,.fill-color--status-success-light{fill:var(--cwc-color-status-success-light,#c5e1a5)}.fill--bright-blue,.fill-color--status-info{fill:var(--cwc-color-status-info,#3fa9f5)}.fill--bright-blue-dark,.fill-color--status-info-dark{fill:var(--cwc-color-status-info-dark,#01579b)}.fill--bright-blue-light,.fill-color--status-info-light{fill:var(--cwc-color-status-info-light,#81d4fa)}.fill--deep-blue,.fill-color--primary-darkest{fill:var(--cwc-color-primary-darkest,#001b3a)}.stroke--true-red,.stroke-color--status-error{stroke:var(--cwc-color-status-error,#ee3d42)}.stroke--true-red-dark,.stroke-color--status-error-dark{stroke:var(--cwc-color-status-error-dark,#b71c1c)}.stroke--true-red-light,.stroke-color--status-error-light{stroke:var(--cwc-color-status-error-light,#ef9a9a)}.stroke--true-white,.stroke-color--grayscale-white{stroke:var(--cwc-color-grayscale-white,#fff)}.stroke--true-black,.stroke-color--grayscale-black{stroke:var(--cwc-color-grayscale-black,#000)}.stroke--true-blue,.stroke-color--ui-primary{stroke:var(--cwc-color-ui-primary,#003876)}.stroke--medium-blue,.stroke-color--primary-dark{stroke:var(--cwc-color-primary-dark,#002a59)}.stroke--medium-grey,.stroke-color--grayscale-medium{stroke:var(--cwc-color-grayscale-medium,#666)}.stroke--dark-grey,.stroke-color--grayscale-dark{stroke:var(--cwc-color-grayscale-dark,#333)}.stroke--disabled-grey,.stroke-color--status-disabled{stroke:var(--cwc-color-status-disabled,#d6d6d6)}.stroke--bright-orange,.stroke-color--status-warning{stroke:var(--cwc-color-status-warning,#fbb03b)}.stroke--bright-orange-dark,.stroke-color--status-warning-dark{stroke:var(--cwc-color-status-warning-dark,#ff8f00)}.stroke--bright-orange-light,.stroke-color--status-warning-light{stroke:var(--cwc-color-status-warning-light,#ffcc80)}.stroke--bright-green,.stroke-color--status-success{stroke:var(--cwc-color-status-success,#7ac943)}.stroke--bright-green-dark,.stroke-color--status-success-dark{stroke:var(--cwc-color-status-success-dark,#1b5e20)}.stroke--bright-green-light,.stroke-color--status-success-light{stroke:var(--cwc-color-status-success-light,#c5e1a5)}.stroke--bright-blue,.stroke-color--status-info{stroke:var(--cwc-color-status-info,#3fa9f5)}.stroke--bright-blue-dark,.stroke-color--status-info-dark{stroke:var(--cwc-color-status-info-dark,#01579b)}.stroke--bright-blue-light,.stroke-color--status-info-light{stroke:var(--cwc-color-status-info-light,#81d4fa)}.stroke--deep-blue,.stroke-color--primary-darkest{stroke:var(--cwc-color-primary-darkest,#001b3a)}:host{display:inline-block}.cwc-pagination{-ms-flex-align:center;align-items:center;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;list-style:none;margin:0;padding:0}.cwc-pagination__item{margin:0 8px;line-height:1rem}.cwc-pagination__item>a{background-color:transparent;border:1px solid transparent;border-radius:2px;color:var(--cwc-pagination-item-color,var(--cwc-color-grayscale-medium,#666));cursor:pointer;display:inline-block;font-size:.875rem;height:22px;line-height:23px;text-decoration:none;text-align:center;-webkit-transition:-webkit-transform .2s ease;transition:-webkit-transform .2s ease;transition:transform .2s ease;transition:transform .2s ease,-webkit-transform .2s ease;padding:0 .442rem}\\@media (hover:hover){.cwc-pagination__item>a:hover{border:1px solid var(--cwc-pagination-item-hover-border-color,var(--cwc-color-links,#3fa9f5));text-decoration:none;color:var(--cwc-pagination-item-hover-color,var(--cwc-color-grayscale-medium,#666))}}.cwc-pagination__item>a:focus{border:1px solid var(--cwc-pagination-item-focus-border-color,var(--cwc-color-links,#3fa9f5));text-decoration:none;color:var(--cwc-pagination-item-focus-color,var(--cwc-color-grayscale-medium,#666));outline:none}.cwc-pagination__item>a.active{color:var(--cwc-pagination-item-active-color,var(--cwc-color-grayscale-white,#fff));background:var(--cwc-pagination-item-active-background-color,var(--cwc-color-links,#3fa9f5));cursor:default;-webkit-animation-name:activePageOpacity;animation-name:activePageOpacity;-webkit-animation-duration:.33s;animation-duration:.33s}\\@-webkit-keyframes activePageOpacity{0%{opacity:.6}60%{opacity:.8}to{background:var(--cwc-pagination-item-active-background-color,var(--cwc-color-links,#3fa9f5));opacity:1}}\\@keyframes activePageOpacity{0%{opacity:.6}60%{opacity:.8}to{background:var(--cwc-pagination-item-active-background-color,var(--cwc-color-links,#3fa9f5));opacity:1}}.cwc-pagination__next,.cwc-pagination__prev{margin:0 8px}.cwc-pagination__next>a,.cwc-pagination__prev>a{height:14px;width:14px;line-height:14px;color:var(--cwc-pagination-arrows-color,var(--cwc-color-links,#3fa9f5));padding:0}\\@media (hover:hover){.cwc-pagination__next>a:hover,.cwc-pagination__prev>a:hover{border-color:transparent;color:var(--cwc-pagination-arrows-hover-color,var(--cwc-color-links-dark,#01579b));text-decoration:none}}\\@media (hover:hover){.cwc-pagination__spacer:hover{border:none;text-decoration:none}}\";\n  }\n\n};\nexport { CwcPagination as cwc_pagination };","map":null,"metadata":{},"sourceType":"module"}