{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport * as i0 from \"@angular/core\";\nexport function createInitialState() {\n  return {\n    isLogged: false,\n    applications: [],\n    customer: null,\n    customerId: 0,\n    profile: null\n  };\n}\nlet UserStore = class UserStore extends EntityStore {\n  constructor() {\n    super(createInitialState());\n  }\n  /**\r\n   * this method saves common information from the user into the state of the active session\r\n   *\r\n   * @param application\r\n   * @param customers\r\n   * @param customerIds\r\n   * @param profiles\r\n   */\n\n\n  setUser(application, customers, customerIds, profiles) {\n    this.update(state => Object.assign(Object.assign({}, state), {\n      isLogged: true,\n      applications: application,\n      customer: customers,\n      customerId: customerIds,\n      profile: profiles\n    }));\n  }\n  /**\r\n   * resets user details for logging out\r\n   */\n\n\n  cleanUser() {\n    createInitialState();\n  }\n\n};\n\nUserStore.ɵfac = function UserStore_Factory(t) {\n  return new (t || UserStore)();\n};\n\nUserStore.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserStore,\n  factory: UserStore.ɵfac,\n  providedIn: 'root'\n});\nUserStore = __decorate([StoreConfig({\n  name: 'user'\n})], UserStore);\nexport { UserStore };","map":null,"metadata":{},"sourceType":"module"}