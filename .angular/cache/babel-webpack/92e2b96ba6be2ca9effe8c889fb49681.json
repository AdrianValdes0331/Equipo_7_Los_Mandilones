{"ast":null,"code":"function InitializeDirectionDetection(hostElement) {\n  // the function that sets the dir in the shadow dom\n  function executeDir(dir) {\n    const shadowKids = hostElement.shadowRoot.childNodes;\n    shadowKids.forEach(element => {\n      element.setAttribute('dir', dir);\n    });\n  }\n\n  function intervalHandler() {\n    const actualDir = hostElement.dataset.dir;\n    const dir = window.getComputedStyle(hostElement).getPropertyValue('direction');\n\n    if (dir !== actualDir) {\n      hostElement.dataset.dir = dir;\n      hostElement.shadowRoot && executeDir(dir);\n\n      if (dir === 'rtl') {\n        return hostElement.setAttribute('rtl', 'true');\n      }\n\n      return hostElement.removeAttribute('rtl');\n    }\n  }\n\n  hostElement['rtlInterval'] = setInterval(intervalHandler, 750);\n}\n\nfunction DestroyDirectionDetection(hostElement) {\n  if (hostElement && hostElement['rtlInterval']) {\n    clearInterval(hostElement['rtlInterval']);\n  }\n}\n\nfunction setDesignVersion() {\n  const frameworkVersion = getComputedStyle(document.documentElement).getPropertyValue('--cwc-version');\n  return frameworkVersion ? frameworkVersion : 'v1';\n}\n\nfunction initBasics(componentClass) {\n  !componentClass.designVersion && (componentClass.designVersion = setDesignVersion());\n\n  if (!componentClass.rtl) {\n    componentClass.host && InitializeDirectionDetection(componentClass.host);\n  }\n}\n\nfunction destroyBasics(componentClass) {\n  DestroyDirectionDetection(componentClass.host);\n}\n\nexport { destroyBasics as d, initBasics as i };","map":null,"metadata":{},"sourceType":"module"}