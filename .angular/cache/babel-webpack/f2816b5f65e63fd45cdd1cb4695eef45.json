{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../states/app.store\";\nexport let SessionService = /*#__PURE__*/(() => {\n  class SessionService {\n    constructor(http, appStore) {\n      this.http = http;\n      this.appStore = appStore;\n    }\n    /**\r\n     * This method brings the language configurations for amrica\r\n     */\n\n\n    refreshToken() {\n      const payload = new HttpParams().set('grant_type', 'refresh_token').set('refresh_token', localStorage.getItem('refresh_token')).set('scope', 'security').set('app_name', 'DCM').set('userinformation', 'false').set('include', 'userinfo,profile,applications,roles,customers,oldVersion');\n      return this.http.post(`https://${environment.host}/api/v2/secm/oam/oauth2/token`, payload).pipe(tap(oauth => {\n        this.appStore.setTokens(localStorage.getItem('jwt'), oauth);\n      }));\n    }\n\n  }\n\n  SessionService.ɵfac = function SessionService_Factory(t) {\n    return new (t || SessionService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CmxAppStore));\n  };\n\n  SessionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SessionService,\n    factory: SessionService.ɵfac\n  });\n  return SessionService;\n})();","map":null,"metadata":{},"sourceType":"module"}