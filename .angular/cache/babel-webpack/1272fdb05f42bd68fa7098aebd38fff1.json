{"ast":null,"code":"import { r as registerInstance, c as createEvent, h, H as Host } from './core-85189c77.js';\nimport './index-eb5f436d.js';\nimport { c as cwcTableSortOrder } from './types-56dd385d.js';\nimport { i as initBasics, d as destroyBasics } from './commonComponentFeatures-b771e888.js';\nconst TableSortLabel = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The design version of the framework\n     */\n\n    this.designVersion = null;\n    /**\n     * Sets corresponding sort order icon.\n     */\n\n    this.order = 'none';\n    /**\n     * Specify whether component should render from right to left\n     */\n\n    this.rtl = false;\n    /**\n     * How many times user clicked on the component.\n     */\n\n    this.clickedTimes = 0;\n\n    this.handleClick = () => {\n      this.clickedTimes++;\n\n      if (this.clickedTimes > 2) {\n        this.clickedTimes = 0;\n      }\n\n      this.cwcChange.emit(cwcTableSortOrder[this.clickedTimes]);\n    };\n\n    this.getAriaSort = () => {\n      const order = cwcTableSortOrder[this.clickedTimes];\n      const orderToAriaSort = new Map([['none', 'none'], ['asc', 'ascending'], ['desc', 'descending']]);\n      return orderToAriaSort.get(order) || 'other';\n    };\n\n    this.cwcChange = createEvent(this, \"cwcChange\", 7);\n  }\n\n  setOrder(newValue, oldValue) {\n    if (oldValue !== newValue) {\n      this.clickedTimes = cwcTableSortOrder.findIndex(element => element === newValue);\n    }\n  }\n\n  componentWillLoad() {\n    initBasics(this);\n  }\n\n  disconnectedCallback() {\n    destroyBasics(this);\n  }\n\n  componentDidLoad() {\n    this.clickedTimes = cwcTableSortOrder.findIndex(element => element === this.order);\n  }\n\n  getIcon() {\n    const order = cwcTableSortOrder[this.clickedTimes];\n    const icons = {\n      none: 'sort-idle',\n      asc: 'sort-up',\n      desc: 'sort-down'\n    };\n    return icons[order];\n  }\n\n  render() {\n    return h(Host, {\n      onClick: this.handleClick,\n      role: \"columnheader\",\n      \"aria-sort\": this.getAriaSort(),\n      dir: this.rtl ? 'rtl' : 'ltr',\n      class: this.designVersion\n    }, h(\"slot\", null), h(\"cwc-icon\", {\n      designVersion: this.designVersion,\n      name: this.getIcon(),\n      color: \"bright-blue\"\n    }));\n  }\n\n  static get watchers() {\n    return {\n      \"order\": [\"setOrder\"]\n    };\n  }\n\n  static get style() {\n    return \"*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host{cursor:pointer}:host([data-dir=rtl]) cwc-icon{padding:0 2px 0 0}cwc-icon{padding:0 0 0 2px;vertical-align:middle}\";\n  }\n\n};\nexport { TableSortLabel as cwc_table_sort_label };","map":null,"metadata":{},"sourceType":"module"}