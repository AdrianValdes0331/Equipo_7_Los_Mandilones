{"ast":null,"code":"import _asyncToGenerator from \"D:/Equipo_7_Los_Mandilones/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './core-85189c77.js';\nimport './index-eb5f436d.js';\nimport './types-5a9ba492.js';\nimport { i as initBasics, d as destroyBasics } from './commonComponentFeatures-b771e888.js';\nimport { g as getIconHexCharCode } from './utils-b8f7c37d.js';\nconst InputText = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.didBlurAfterEdit = false;\n    this.inputId = `cwc-input-${inputIds++}`;\n    this.hasFocus = false;\n    this.passwordShown = false;\n    /**\n     * The design version of the framework\n     */\n\n    this.designVersion = null;\n    /**\n     * The type of control to display. The default type is text.\n     */\n\n    this.type = 'text';\n    /**\n     * Input name\n     */\n\n    this.name = this.inputId;\n    /**\n     * Input value\n     */\n\n    this.value = null;\n    /**\n     * Specify whether component should render from right to left\n     */\n\n    this.rtl = false;\n    /**\n     * When set to true the element is disabled\n     */\n\n    this.disabled = false;\n    /**\n     * When set to true the element is required and the label is decorated with an asterisk (*)\n     */\n\n    this.required = false;\n    /**\n     * Status of the form field.\n     */\n\n    this.status = 'regular';\n    /**\n     * This property sets the appereance variation of the input.\n     */\n\n    this.variant = 'regular';\n    /**\n     * When set to true the element is not writeable.\n     */\n\n    this.readonly = false;\n    /**\n     * When set to true the component doesn't render form-group wrapper\n     */\n\n    this.unwrap = false;\n    /**\n     * When set, then debounce time will be applied after user writes into the input\n     * (in miliseconds)\n     */\n\n    this.debounceTime = 0;\n    /**\n     * When set to true, loader will appear inside the input\n     */\n\n    this.loading = false;\n    /**\n     * Indicates whether the value of the control can be automatically completed by the browser.\n     */\n\n    this.autocomplete = 'off';\n    /**\n     * Whether auto correction should be enabled when the user is entering/editing the text value.\n     */\n\n    this.autocorrect = 'off';\n    /**\n     * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n     */\n\n    this.autofocus = false;\n    /**\n     * If `true`, the element will have its spelling and grammar checked.\n     */\n\n    this.spellcheck = false;\n    /**\n     * Specify the tabindex of the component\n     */\n\n    this.nativeElementTabIndex = '0';\n    /**\n     * Specify if the password input can be switched to view the contents\n     */\n\n    this.allowPasswordShow = false;\n    /**\n     * Specify if input label should render for mobile\n     */\n\n    this.mobile = false;\n\n    this.clearTextInput = ev => {\n      if (!this.readonly && !this.disabled && ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n\n      this.value = '';\n      this.cwcChange.emit(this.value);\n      /**\n       * This is needed for clearOnEdit\n       * Otherwise the value will not be cleared\n       * if user is inside the input\n       */\n\n      if (this.nativeInput) {\n        this.nativeInput.value = '';\n      }\n    };\n\n    this.onInput = ev => {\n      const input = ev.target;\n\n      if (input) {\n        if (this.debounceTime > 0) {\n          const debouncedFunction = this.debounce(() => {\n            this.value = input.value || '';\n            this.cwcChange.emit(this.value);\n          }, this.debounceTime);\n          debouncedFunction();\n        } else {\n          this.value = input.value || '';\n          this.cwcChange.emit(this.value);\n        }\n      }\n\n      this.cwcInput.emit(ev);\n    };\n\n    this.onBlur = () => {\n      this.hasFocus = false;\n      this.focusChanged();\n\n      if (this.mobile) {\n        if (this.empty) {\n          this.labelEl.classList.remove('float', 'float--focused');\n\n          if (this.leadingIcon) {\n            this.labelEl.classList.add('cwc-form-control__label--mobile-icon');\n          }\n        } else {\n          this.labelEl.classList.remove('float--focused');\n        }\n      }\n\n      this.cwcBlur.emit();\n    };\n\n    this.onFocus = () => {\n      this.hasFocus = true;\n      this.focusChanged();\n\n      if (this.mobile) {\n        if (this.empty) {\n          this.labelEl.classList.add('float', 'float--focused');\n\n          if (this.leadingIcon) {\n            this.labelEl.classList.remove('cwc-form-control__label--mobile-icon');\n          }\n        } else {\n          this.labelEl.classList.add('float--focused');\n        }\n      }\n\n      this.cwcFocus.emit();\n    };\n\n    this.onKeydown = () => {\n      if (this.clearOnEdit) {\n        // Did the input value change after it was blurred and edited?\n        if (this.didBlurAfterEdit && this.hasValue()) {\n          // Clear the input\n          this.clearTextInput();\n        } // Reset the flag\n\n\n        this.didBlurAfterEdit = false;\n      }\n    };\n\n    this.valueCheck = () => {\n      this.empty = this.value === null || this.value === '' ? true : false;\n    };\n\n    this.adjustMobileLabel = () => {\n      this.labelEl.classList.remove('ellipsis');\n      const inputWidth = this.nativeInput.getBoundingClientRect().width - 24;\n      const labelWidth = this.labelEl.getBoundingClientRect().width;\n\n      if (labelWidth > inputWidth) {\n        this.labelEl.classList.add('ellipsis');\n      } else {\n        this.labelEl.classList.remove('ellipsis');\n      }\n    };\n\n    this.cwcInput = createEvent(this, \"cwcInput\", 7);\n    this.cwcChange = createEvent(this, \"cwcChange\", 7);\n    this.cwcBlur = createEvent(this, \"cwcBlur\", 7);\n    this.cwcFocus = createEvent(this, \"cwcFocus\", 7);\n  }\n  /**\n   * Check if input is empty\n   */\n\n\n  checkIfInputHasContent() {\n    if (this.mobile) {\n      setTimeout(() => {\n        this.valueCheck();\n\n        if (this.empty && !this.hasFocus) {\n          this.labelEl.classList.remove('float', 'float--focused');\n\n          if (this.leadingIcon) {\n            this.labelEl.classList.add('cwc-form-control__label--mobile-icon');\n          }\n        } else {\n          this.labelEl.classList.add('float');\n        }\n      }, 50);\n    }\n  }\n  /**\n   * When label is changed, check if it isn't too long and should fall back into ellipsis\n   */\n\n\n  checkLabelsWidth() {\n    if (this.mobile) {\n      setTimeout(() => {\n        this.adjustMobileLabel();\n      }, 50);\n    }\n  }\n  /**\n   * When input gets focused, check lenght of label and if too long fall back to ellipsis\n   */\n\n\n  checkFloatedLabelsWidth() {\n    if (this.mobile) {\n      setTimeout(() => {\n        this.adjustMobileLabel();\n      }, 50);\n    }\n  }\n  /**\n   * Sets focus on the specified `cwc-input`. Use this method instead of the global\n   * `input.focus()`.\n   */\n\n\n  setFocus() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.nativeInput) {\n        _this.nativeInput.focus();\n      }\n    })();\n  }\n  /**\n   * Returns the native `<input>` element used under the hood.\n   */\n\n\n  getNativeElement() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this2.nativeInput;\n    })();\n  }\n  /**\n   * Set component value and emit cwcChange event. This is handy for emulating user input in automated testing tools.\n   * @param value New value\n   */\n\n\n  writeValue(value) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.value = value;\n\n      _this3.cwcChange.emit(_this3.value);\n    })();\n  }\n  /**\n   * Debounce serves as timeout function on input\n   * @param func is function that should be called after the time passes\n   * @param delay is the debounce time on miliseconds\n   */\n\n\n  debounce(func, delay) {\n    return (...args) => {\n      const doLater = () => {\n        this.debounceTimer = undefined;\n        func.apply(this, args);\n      };\n\n      if (this.debounceTimer !== undefined) {\n        clearTimeout(this.debounceTimer);\n      }\n\n      this.debounceTimer = setTimeout(doLater, delay);\n    };\n  }\n\n  focusChanged() {\n    // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n    if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\n      this.didBlurAfterEdit = true;\n    }\n  }\n\n  renderIconStyles(leadingIcon, trailingIcon) {\n    if (leadingIcon || trailingIcon) {\n      let styles = '';\n      styles += leadingIcon ? `.cwc-form-control--icon-lead::before{content:\"\\\\${getIconHexCharCode(leadingIcon)}\"}` : '';\n      styles += trailingIcon ? `.cwc-form-control--icon-trail::after{content:\"\\\\${getIconHexCharCode(trailingIcon)}\"}` : '';\n      return h(\"style\", {\n        type: \"text/css\"\n      }, styles);\n    }\n\n    return null;\n  }\n\n  hasValue() {\n    return this.getValue().length > 0;\n  }\n\n  getValue() {\n    return this.value || '';\n  }\n\n  componentWillLoad() {\n    initBasics(this); // By default, password inputs clear after focus when they have content\n\n    this.clearOnEdit = this.clearOnEdit === undefined && this.type === 'password' ? true : this.clearOnEdit;\n\n    if (this.mobile) {\n      this.valueCheck();\n    }\n  }\n\n  componentDidLoad() {\n    if (this.mobile) {\n      setTimeout(() => {\n        if (!this.empty) {\n          this.labelEl.classList.add('float');\n          this.labelEl.classList.remove('cwc-form-control__label--mobile-icon');\n        }\n\n        this.adjustMobileLabel();\n      }, 50);\n    }\n  }\n\n  componentDidRender() {\n    if (this.variant === 'trailing-button' && this.designVersion === 'v2') {\n      setTimeout(() => {\n        const buttonWidth = this.buttonEl.getBoundingClientRect().width;\n        this.nativeInput.style.paddingInlineEnd = buttonWidth + 16 + 'px';\n      }, 50);\n    }\n  }\n\n  disconnectedCallback() {\n    destroyBasics(this);\n  }\n\n  render() {\n    const inputComponentV2 = h(\"div\", null, this.trailingButton ? null : this.renderIconStyles(this.leadingIcon, this.trailingIcon), h(\"div\", {\n      class: `${this.status} ` + (this.disabled ? ' disabled' : '') + (this.variant ? ' ' + this.variant : '') + (this.leadingIcon && !this.trailingButton ? ' cwc-form-control--icon-lead' : '') + (this.loading ? ' cwc-form-control--loading' : '') + (this.trailingIcon && !this.trailingButton ? ' cwc-form-control--icon-trail' : '')\n    }, this.unwrap || this.variant === 'trailing-button' ? null : h(\"label\", {\n      htmlFor: this.inputId,\n      class: 'cwc-form-control__label--mobile float',\n      ref: el => this.labelEl = el\n    }, this.label, this.label && this.required && h(\"span\", {\n      class: \"required\"\n    }, \" *\")), h(\"input\", {\n      ref: input => this.nativeInput = input,\n      type: this.type === 'password' && this.allowPasswordShow ? this.passwordShown ? 'text' : 'password' : this.type,\n      class: \"cwc-form-control\",\n      id: this.inputId,\n      name: this.name,\n      value: this.value,\n      placeholder: this.placeholder,\n      disabled: this.disabled,\n      required: this.required,\n      autoComplete: this.autocomplete,\n      autoCorrect: this.autocorrect,\n      autoFocus: this.autofocus,\n      minLength: this.minlength,\n      maxLength: this.maxlength,\n      readOnly: this.readonly,\n      spellCheck: this.spellcheck,\n      onInput: this.onInput,\n      onBlur: this.onBlur,\n      onFocus: this.onFocus,\n      onKeyDown: this.onKeydown,\n      \"aria-invalid\": this.status === 'error',\n      \"aria-label\": this.label,\n      \"aria-placeholder\": this.placeholder,\n      \"aria-describedby\": this.status === 'error' ? `${this.inputId}-error` : null,\n      tabindex: this.nativeElementTabIndex\n    }), this.loading ? h(\"cwc-loader\", {\n      class: 'cwc-form-control__loader' + (this.trailingIcon ? ' cwc-form-control__loader--trailing-icon' : ''),\n      size: \"small\"\n    }) : null, this.variant === 'trailing-button' ? h(\"cwc-button\", {\n      size: this.trailingButton === 'icon' || this.trailingButton === 'link' ? 'medium' : 'small',\n      class: 'cwc-form-control__button ' + this.trailingButton,\n      variant: this.trailingButton,\n      trailingIcon: this.trailingIcon,\n      leadingIcon: this.leadingIcon,\n      ref: el => this.buttonEl = el,\n      disabled: this.disabled,\n      designVersion: this.designVersion\n    }, this.label) : null, this.type === 'password' && this.allowPasswordShow ? h(\"cwc-icon\", {\n      class: \"cwc-form-control__show-password\",\n      iconCode: \"e992\",\n      color: this.passwordShown ? 'bright-blue' : 'disabled-grey',\n      size: \"24px\",\n      onClick: () => {\n        this.passwordShown = !this.passwordShown;\n      }\n    }) : null));\n    const inputComponent = h(\"div\", null, this.renderIconStyles(this.leadingIcon, this.trailingIcon), h(\"div\", {\n      class: `${this.status} ` + (this.leadingIcon ? ' cwc-form-control--icon-lead' : '') + (this.loading ? ' cwc-form-control--loading' : '') + (this.trailingIcon ? ' cwc-form-control--icon-trail' : '') + (this.disabled ? ' disabled' : '') + (this.variant ? ' ' + this.variant : '')\n    }, this.mobile ? h(\"label\", {\n      htmlFor: this.inputId,\n      class: 'cwc-form-control__label--mobile' + (this.leadingIcon ? ' cwc-form-control__label--mobile-icon' : ''),\n      ref: el => this.labelEl = el\n    }, this.label, this.label && this.required && h(\"span\", {\n      class: \"required\"\n    }, \" *\")) : '', h(\"input\", {\n      ref: input => this.nativeInput = input,\n      type: this.type === 'password' && this.allowPasswordShow ? this.passwordShown ? 'text' : 'password' : this.type,\n      class: \"cwc-form-control\",\n      id: this.inputId,\n      name: this.name,\n      value: this.value,\n      placeholder: this.mobile ? null : this.placeholder,\n      disabled: this.disabled,\n      required: this.required,\n      autoComplete: this.autocomplete,\n      autoCorrect: this.autocorrect,\n      autoFocus: this.autofocus,\n      minLength: this.minlength,\n      maxLength: this.maxlength,\n      readOnly: this.readonly,\n      spellCheck: this.spellcheck,\n      onInput: this.onInput,\n      onBlur: this.onBlur,\n      onFocus: this.onFocus,\n      onKeyDown: this.onKeydown,\n      \"aria-invalid\": this.status === 'error',\n      \"aria-label\": this.label,\n      \"aria-placeholder\": this.placeholder,\n      \"aria-describedby\": this.status === 'error' ? `${this.inputId}-error` : null,\n      tabindex: this.nativeElementTabIndex\n    }), this.loading ? h(\"cwc-loader\", {\n      class: 'cwc-form-control__loader' + (this.trailingIcon ? ' cwc-form-control__loader--trailing-icon' : ''),\n      size: \"small\"\n    }) : null, this.type === 'password' && this.allowPasswordShow ? h(\"cwc-icon\", {\n      class: \"cwc-form-control__show-password\",\n      iconCode: \"e992\",\n      color: this.passwordShown ? 'bright-blue' : 'disabled-grey',\n      size: \"24px\",\n      onClick: () => {\n        this.passwordShown = !this.passwordShown;\n      }\n    }) : null));\n    return this.unwrap ? h(Host, {\n      class: this.designVersion\n    }, this.designVersion === 'v2' ? inputComponentV2 : inputComponent) : h(Host, {\n      class: this.designVersion\n    }, h(\"cwc-form-group\", {\n      label: this.label,\n      required: this.required,\n      status: this.status,\n      statusMessage: this.statusMessage,\n      style: {\n        width: '100%'\n      },\n      for: this.inputId,\n      statusElementId: `${this.inputId}-error`,\n      mobile: this.designVersion === 'v2' ? true : this.mobile,\n      designVersion: this.designVersion\n    }, this.designVersion === 'v2' ? inputComponentV2 : inputComponent));\n  }\n\n  get host() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"value\": [\"checkIfInputHasContent\"],\n      \"label\": [\"checkLabelsWidth\"],\n      \"hasFocus\": [\"checkFloatedLabelsWidth\"]\n    };\n  }\n\n  static get style() {\n    return \"*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host(.v2) input.cwc-form-control,cwc-ld-input.v2 input.cwc-form-control{border-radius:8px}:host(.v2) .cwc-form-control__label--mobile,cwc-ld-input.v2 .cwc-form-control__label--mobile{color:var(--cwc-input-label-mobile-color,var(--cwc-color-ui-primary-darkest,#001b3a))}:host(.v2) .error label,cwc-ld-input.v2 .error label{color:var(--cwc-input-error-label-color,var(--cwc-color-status-error,#ee3d42))}:host(.v2) .success label,cwc-ld-input.v2 .success label{color:var(--cwc-input-success-label-color,var(--cwc-color-status-success,#7ac943))}:host(.v2) .warning label,cwc-ld-input.v2 .warning label{color:var(--cwc-input-warning-label-color,var(--cwc-color-status-warning,#fbb03b))}:host(.v2) .trailing-button input.cwc-form-control,cwc-ld-input.v2 .trailing-button input.cwc-form-control{border-radius:20px}[dir=ltr] :host(.v2) .trailing-button .cwc-form-control__button,[dir=ltr] cwc-ld-input.v2 .trailing-button .cwc-form-control__button{right:4px}[dir=rtl] :host(.v2) .trailing-button .cwc-form-control__button,[dir=rtl] cwc-ld-input.v2 .trailing-button .cwc-form-control__button{left:4px}:host(.v2) .trailing-button .cwc-form-control__button,cwc-ld-input.v2 .trailing-button .cwc-form-control__button{position:absolute;inset-inline-end:4px;top:4px}[dir=ltr] :host(.v2) .trailing-button .cwc-form-control__button.icon,[dir=ltr] :host(.v2) .trailing-button .cwc-form-control__button.link,[dir=ltr] cwc-ld-input.v2 .trailing-button .cwc-form-control__button.icon,[dir=ltr] cwc-ld-input.v2 .trailing-button .cwc-form-control__button.link{right:12px}[dir=rtl] :host(.v2) .trailing-button .cwc-form-control__button.icon,[dir=rtl] :host(.v2) .trailing-button .cwc-form-control__button.link,[dir=rtl] cwc-ld-input.v2 .trailing-button .cwc-form-control__button.icon,[dir=rtl] cwc-ld-input.v2 .trailing-button .cwc-form-control__button.link{left:12px}:host(.v2) .trailing-button .cwc-form-control__button.icon,:host(.v2) .trailing-button .cwc-form-control__button.link,cwc-ld-input.v2 .trailing-button .cwc-form-control__button.icon,cwc-ld-input.v2 .trailing-button .cwc-form-control__button.link{inset-inline-end:12px;top:8px}:host,cwc-ld-input{display:inline-block}.disabled .cwc-form-control__label--mobile{background:var(--cwc-input-label-mobile-disabled-background-color,var(--cwc-color-grayscale-light,#d6d6d6))}.disabled .cwc-form-control__label--mobile.float{color:var(--cwc-input-label-mobile-disabled-color,var(--cwc-color-grayscale-medium,#666));background:-webkit-gradient(linear,left bottom,left top,from(var(--cwc-color-grayscale-light,#d6d6d6)),color-stop(40%,var(--cwc-color-grayscale-white,#fff)),color-stop(60%,var(--cwc-color-grayscale-white,#fff)),to(hsla(0,0%,100%,0)));background:linear-gradient(0deg,var(--cwc-color-grayscale-light,#d6d6d6),var(--cwc-color-grayscale-white,#fff) 40%,var(--cwc-color-grayscale-white,#fff) 60%,hsla(0,0%,100%,0))}.error input.cwc-form-control{border:.0625rem solid var(--cwc-input-error-border-color,var(--cwc-color-status-error,#ee3d42));background-color:var(--cwc-input-error-background-color,var(--cwc-color-status-error-alpha-five,rgba(238,61,66,.05)))}.error input.cwc-form-control:active,.error input.cwc-form-control:focus{border-color:var(--cwc-input-error-focus-border-color,var(--cwc-color-status-error-dark,#b71c1c));background-color:var(--cwc-input-error-focus-background-color,var(--cwc-color-status-error-alpha-five,rgba(238,61,66,.05)))}.error label{background-color:inherit}.error label.float{color:var(--cwc-input-error-label-color,var(--cwc-color-status-error,#ee3d42));background:-webkit-gradient(linear,left bottom,left top,from(var(--cwc-color-status-error-alpha-five,rgba(238,61,66,.05))),color-stop(40%,var(--cwc-color-grayscale-white,#fff)),color-stop(60%,var(--cwc-color-grayscale-white,#fff)),to(hsla(0,0%,100%,0)));background:linear-gradient(0deg,var(--cwc-color-status-error-alpha-five,rgba(238,61,66,.05)),var(--cwc-color-grayscale-white,#fff) 40%,var(--cwc-color-grayscale-white,#fff) 60%,hsla(0,0%,100%,0))}.error label.float--focused{color:var(--cwc-input-error-label-focused-color,var(--cwc-color-status-error-dark,#b71c1c))}.success input.cwc-form-control{border:.0625rem solid var(--cwc-input-success-border-color,var(--cwc-color-status-success,#7ac943));background-color:var(--cwc-input-success-background-color,var(--cwc-color-status-success-alpha-five,rgba(122,201,67,.05)))}.success input.cwc-form-control:active,.success input.cwc-form-control:focus{border-color:var(--cwc-input-success-focus-color,var(--cwc-color-status-success-dark,#1b5e20));background-color:var(--cwc-input-success-focus-background-color,var(--cwc-color-status-success-alpha-five,rgba(122,201,67,.05)))}.success label{background-color:inherit}.success label.float{color:var(--cwc-input-success-label-color,var(--cwc-color-status-success,#7ac943));background:-webkit-gradient(linear,left bottom,left top,from(var(--cwc-color-status-success-alpha-five,rgba(122,201,67,.05))),color-stop(40%,var(--cwc-color-grayscale-white,#fff)),color-stop(60%,var(--cwc-color-grayscale-white,#fff)),to(hsla(0,0%,100%,0)));background:linear-gradient(0deg,var(--cwc-color-status-success-alpha-five,rgba(122,201,67,.05)),var(--cwc-color-grayscale-white,#fff) 40%,var(--cwc-color-grayscale-white,#fff) 60%,hsla(0,0%,100%,0))}.success label.float--focused{color:var(--cwc-input-success-label-focused-color,var(--cwc-color-status-success-dark,#1b5e20))}.warning input.cwc-form-control{border:.0625rem solid var(--cwc-input-warning-border-color,var(--cwc-color-status-warning,#fbb03b));background-color:var(--cwc-input-warning-background-color,var(--cwc-color-status-warning-alpha-five,rgba(251,176,59,.05)))}.warning input.cwc-form-control:active,.warning input.cwc-form-control:focus{border-color:var(--cwc-input-warning-focus-border-color,var(--cwc-color-status-warning-dark,#ff8f00));background-color:var(--cwc-input-warning-focus-background-color,var(--cwc-color-status-warning-alpha-five,rgba(251,176,59,.05)))}.warning label{background-color:inherit}.warning label.float{color:var(--cwc-input-warning-label-color,var(--cwc-color-status-warning,#fbb03b));background:-webkit-gradient(linear,left bottom,left top,from(var(--cwc-color-status-warning-alpha-five,rgba(251,176,59,.05))),color-stop(40%,var(--cwc-color-grayscale-white,#fff)),color-stop(60%,var(--cwc-color-grayscale-white,#fff)),to(hsla(0,0%,100%,0)));background:linear-gradient(0deg,var(--cwc-color-status-warning-alpha-five,rgba(251,176,59,.05)),var(--cwc-color-grayscale-white,#fff) 40%,var(--cwc-color-grayscale-white,#fff) 60%,hsla(0,0%,100%,0))}.warning label.float--focused{color:var(--cwc-input-warning-label-focused-color,var(--cwc-color-status-warning-dark,#ff8f00))}.select-box input.cwc-form-control{cursor:pointer}.select-box input.cwc-form-control:-moz-read-only{pointer-events:all}.select-box input.cwc-form-control:read-only{pointer-events:all}.select-box.cwc-form-control--icon-trail:after{font-size:1rem}[dir=ltr] .single-line input.cwc-form-control{border-left-style:none}[dir=ltr] .single-line input.cwc-form-control,[dir=rtl] .single-line input.cwc-form-control{border-right-style:none}[dir=rtl] .single-line input.cwc-form-control{border-left-style:none}.single-line input.cwc-form-control{border-radius:0!important;border-top-style:none;border-inline-start-style:none;border-inline-end-style:none}.cwc-form-control{display:block;width:100%}.cwc-form-control--loading{position:relative}[dir=ltr] .cwc-form-control--loading .cwc-form-control{padding-right:2.75rem}[dir=rtl] .cwc-form-control--loading .cwc-form-control{padding-left:2.75rem}.cwc-form-control--loading .cwc-form-control{-webkit-padding-end:2.75rem;padding-inline-end:2.75rem}.cwc-form-control--loading .cwc-form-control__label--mobile:not(.float){width:calc(100% - 3.375rem)}.cwc-form-control--icon-lead,.cwc-form-control--icon-trail{width:100%;height:auto;position:relative}.cwc-form-control--icon-lead:after,.cwc-form-control--icon-lead:before,.cwc-form-control--icon-trail:after,.cwc-form-control--icon-trail:before{font-family:dls-icons;position:absolute;line-height:1.5rem;font-size:1rem;top:.5rem;color:var(--cwc-input-icon-color,var(--cwc-color-elements-input-icon,#3fa9f5));pointer-events:none}.cwc-form-control--icon-lead.disabled:after,.cwc-form-control--icon-lead.disabled:before,.cwc-form-control--icon-trail.disabled:after,.cwc-form-control--icon-trail.disabled:before{color:var(--cwc-input-icon-disabled-color,var(--cwc-color-elements-input-border,#adaebb))}.cwc-form-control--icon-lead.error:after,.cwc-form-control--icon-lead.error:before,.cwc-form-control--icon-trail.error:after,.cwc-form-control--icon-trail.error:before{color:var(--cwc-input-icon-error-color,var(--cwc-color-status-error,#ee3d42))}.cwc-form-control--icon-lead.warning:after,.cwc-form-control--icon-lead.warning:before,.cwc-form-control--icon-trail.warning:after,.cwc-form-control--icon-trail.warning:before{color:var(--cwc-input-icon-warning-color,var(--cwc-color-status-warning,#fbb03b))}.cwc-form-control--icon-lead.success:after,.cwc-form-control--icon-lead.success:before,.cwc-form-control--icon-trail.success:after,.cwc-form-control--icon-trail.success:before{color:var(--cwc-input-icon-success-color,var(--cwc-color-status-success,#7ac943))}.cwc-form-control--icon-lead .cwc-form-control__show-password,.cwc-form-control--icon-trail .cwc-form-control__show-password{top:4px}[dir=ltr] .cwc-form-control--icon-trail input.cwc-form-control{padding-right:2.5rem}[dir=rtl] .cwc-form-control--icon-trail input.cwc-form-control{padding-left:2.5rem}.cwc-form-control--icon-trail input.cwc-form-control{-webkit-padding-end:2.5rem;padding-inline-end:2.5rem}[dir=ltr] .cwc-form-control--icon-trail:after{right:1rem}[dir=rtl] .cwc-form-control--icon-trail:after{left:1rem}.cwc-form-control--icon-trail:after{position:absolute;inset-inline-end:1rem}[dir=ltr] .cwc-form-control--icon-trail .cwc-form-control__loader{right:2.5rem}[dir=rtl] .cwc-form-control--icon-trail .cwc-form-control__loader{left:2.5rem}.cwc-form-control--icon-trail .cwc-form-control__loader{inset-inline-end:2.5rem}[dir=ltr] .cwc-form-control--icon-trail .cwc-form-control__show-password{right:36px}[dir=rtl] .cwc-form-control--icon-trail .cwc-form-control__show-password{left:36px}.cwc-form-control--icon-trail .cwc-form-control__show-password{inset-inline-end:36px}[dir=ltr] .cwc-form-control--icon-lead input.cwc-form-control{padding-left:2.5rem}[dir=rtl] .cwc-form-control--icon-lead input.cwc-form-control{padding-right:2.5rem}.cwc-form-control--icon-lead input.cwc-form-control{-webkit-padding-start:2.5rem;padding-inline-start:2.5rem}[dir=ltr] .cwc-form-control--icon-lead:before{padding-left:1rem}[dir=rtl] .cwc-form-control--icon-lead:before{padding-right:1rem}.cwc-form-control--icon-lead:before{-webkit-padding-start:1rem;padding-inline-start:1rem}[dir=ltr] .cwc-form-control__loader{right:1rem}[dir=rtl] .cwc-form-control__loader{left:1rem}.cwc-form-control__loader{position:absolute;inset-inline-end:1rem;top:.5rem}[dir=ltr] .cwc-form-control__loader--trailing-icon{right:2.5rem}[dir=rtl] .cwc-form-control__loader--trailing-icon{left:2.5rem}.cwc-form-control__loader--trailing-icon{inset-inline-end:2.5rem}[dir=ltr] .cwc-form-control__show-password{right:8px}[dir=rtl] .cwc-form-control__show-password{left:8px}.cwc-form-control__show-password{position:absolute;bottom:24px;inset-inline-end:8px;cursor:pointer}.cwc-form-control:-moz-read-only{overflow:hidden;text-overflow:ellipsis}.cwc-form-control:read-only{overflow:hidden;text-overflow:ellipsis}[dir=ltr] .cwc-form-control__label--mobile{left:16px}[dir=rtl] .cwc-form-control__label--mobile{right:16px}.cwc-form-control__label--mobile{position:absolute;top:12px;inset-inline-start:16px;color:var(--cwc-input-label-mobile-color,var(--cwc-color-grayscale-medium,#666));font-size:1rem;line-height:1rem;background:var(--cwc-input-label-mobile-background-color,var(--cwc-color-grayscale-white,#fff));border-radius:3px;-webkit-transition:all .15s;transition:all .15s;-webkit-transition-timing-function:cubic-bezier(.4,0,.2,1);transition-timing-function:cubic-bezier(.4,0,.2,1);pointer-events:none;z-index:1;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}[dir=ltr] .cwc-form-control__label--mobile-icon{left:40px}[dir=rtl] .cwc-form-control__label--mobile-icon{right:40px}.cwc-form-control__label--mobile-icon{inset-inline-start:40px}.cwc-form-control__label--mobile.float{font-size:.75rem;line-height:.75rem;top:-6px;-webkit-transition:all .15s;transition:all .15s;-webkit-transition-timing-function:cubic-bezier(.4,0,.2,1);transition-timing-function:cubic-bezier(.4,0,.2,1);padding:0 2px;color:var(--cwc-input-label-mobile-float-color,var(--cwc-color-grayscale-medium,#666));background:-webkit-gradient(linear,left bottom,left top,color-stop(50%,var(--cwc-color-grayscale-white,#fff)),to(hsla(0,0%,100%,0)));background:linear-gradient(0deg,var(--cwc-color-grayscale-white,#fff) 50%,hsla(0,0%,100%,0));width:auto}.cwc-form-control__label--mobile.float--focused{color:var(--cwc-input-label-mobile-float-focused-color,var(--cwc-color-links,#3fa9f5))}.cwc-form-control__label--mobile .required{color:var(--cwc-input-label-mobile-required-color,var(--cwc-color-status-error,#ee3d42))}.cwc-form-control__label--mobile.ellipsis{width:calc(100% - 1.375rem)}input.cwc-form-control{font-size:1rem;line-height:1rem;border-radius:3px;height:2.5rem;padding:0 1rem;border:.0625rem solid var(--cwc-input-form-control-border,var(--cwc-color-elements-input-border,#adaebb));background-color:var(--cwc-input-form-control-background-color,var(--cwc-color-grayscale-white,#fff));font-family:inherit;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;color:var(--cwc-input-color,var(--cwc-color-grayscale-black,#000))}input.cwc-form-control:active,input.cwc-form-control:focus{outline:0 none;border-color:var(--cwc-input-form-control-focus-border-color,var(--cwc-color-links,#3fa9f5));background-color:var(--cwc-input-form-control-focus-backgorund-color,var(--cwc-color-grayscale-white,#fff))}input.cwc-form-control:disabled{background-color:var(--cwc-input-form-control-disabled-background-color,var(--cwc-color-grayscale-light,#d6d6d6))}input.cwc-form-control:disabled:active,input.cwc-form-control:disabled:focus{border-color:var(--cwc-input-form-control-disabled-focus-border-color,var(--cwc-color-elements-input-border,#adaebb))}input.cwc-form-control:-moz-read-only{pointer-events:none}input.cwc-form-control:read-only{pointer-events:none}input.cwc-form-control::-webkit-input-placeholder{color:var(--cwc-input-form-control-placeholder-color,var(--cwc-color-grayscale-medium,#666));font-size:1rem;line-height:normal!important}input.cwc-form-control::-moz-placeholder{color:var(--cwc-input-form-control-placeholder-color,var(--cwc-color-grayscale-medium,#666));font-size:1rem}input.cwc-form-control:-ms-input-placeholder{color:var(--cwc-input-form-control-placeholder-color,var(--cwc-color-grayscale-medium,#666));font-size:1rem}input.cwc-form-control:-moz-placeholder{color:var(--cwc-input-form-control-placeholder-color,var(--cwc-color-grayscale-medium,#666));font-size:1rem}input.cwc-form-control:-webkit-autofill:first-line{font-size:1rem;font-family:inherit}input.cwc-form-control::-webkit-inner-spin-button,input.cwc-form-control::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}input.cwc-form-control[type=number]{-moz-appearance:textfield}.chromeless input.cwc-form-control{border:none;background-color:transparent;height:1.25rem}\\@media (hover:hover){.regular:not(.disabled):hover>.float{color:var(--cwc-input-regular-hover-color,var(--cwc-color-links,#3fa9f5))}.error:not(.disabled) input.cwc-form-control:hover{border-color:var(--cwc-input-error-hover-border-color,var(--cwc-color-status-error-dark,#b71c1c));background-color:var(--cwc-input-error-hover-background-color,var(--cwc-color-status-error-alpha-five,rgba(238,61,66,.05)))}.error:not(.disabled):hover>.float{color:var(--cwc-input-error-hover-color,var(--cwc-color-status-error-dark,#b71c1c))}.warning:not(.disabled) input.cwc-form-control:hover{border-color:var(--cwc-input-warning-hover-border-color,var(--cwc-color-status-warning-dark,#ff8f00));background-color:var(--cwc-input-warning-hover-background-color,var(--cwc-color-status-warning-alpha-five,rgba(251,176,59,.05)))}.warning:not(.disabled):hover>.float{color:var(--cwc-input-warning-hover-color,var(--cwc-color-status-warning-dark,#ff8f00))}.success:not(.disabled) input.cwc-form-control:hover{border-color:var(--cwc-input-success-hover-border-color,var(--cwc-color-status-success-dark,#1b5e20));background-color:var(--cwc-input-success-hover-background-color,var(--cwc-color-status-success-alpha-five,rgba(122,201,67,.05)))}.success:not(.disabled):hover>.float{color:var(--cwc-input-success-hover-color,var(--cwc-color-status-success-dark,#1b5e20))}input.cwc-form-control:hover{outline:0 none;border-color:var(--cwc-input-form-control-hover-border-color,var(--cwc-color-links,#3fa9f5));background-color:var(--cwc-input-form-control-hover-background-color,var(--cwc-color-grayscale-white,#fff))}input.cwc-form-control:disabled:hover{border-color:var(--cwc-input-form-control-disabled-hover-border-color,var(--cwc-color-elements-input-border,#adaebb));background-color:var(--cwc-input-form-control-disabled-hover-background-color,var(--cwc-color-grayscale-light,#d6d6d6))}input.cwc-form-control:-moz-read-only{cursor:default;pointer-events:all}input.cwc-form-control:read-only{cursor:default;pointer-events:all}.chromeless input.cwc-form-control:hover{border:none;background-color:transparent}}\";\n  }\n\n};\nlet inputIds = 0;\nexport { InputText as cwc_ld_input };","map":null,"metadata":{},"sourceType":"module"}