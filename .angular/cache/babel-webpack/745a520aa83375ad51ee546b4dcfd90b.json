{"ast":null,"code":"import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './core-85189c77.js';\nimport { i as initBasics, d as destroyBasics } from './commonComponentFeatures-b771e888.js';\nconst MenuEntity = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The design version of the framework\n     */\n\n    this.designVersion = null;\n    /**\n     * Specify if it will render in rtl mode\n     */\n\n    this.rtl = false;\n    /**\n     * define the entity name that it will be shown\n     */\n\n    this.entityName = 'Entity Name';\n    /**\n     * define the entity id that it will be shown\n     */\n\n    this.entityId = '#EntityId';\n    /**\n     * Specify if entity is active\n     */\n\n    this.active = false;\n\n    this.selectEntity = () => {\n      this.entitySelectedEvent.emit({\n        entityName: this.entityName,\n        entityId: this.entityId\n      });\n    };\n\n    this.entitySelectedEvent = createEvent(this, \"cwcEntitySelected\", 7);\n  }\n\n  componentWillLoad() {\n    initBasics(this);\n  }\n\n  componentDidRender() {\n    if (this.active) {\n      this.selectEntity();\n    }\n  }\n\n  disconnectedCallback() {\n    destroyBasics(this);\n  }\n\n  render() {\n    return h(Host, {\n      class: `${this.designVersion} ${this.active && 'active'}`,\n      role: \"button\",\n      tabindex: \"0\",\n      onClick: this.selectEntity\n    }, h(\"div\", {\n      class: \"cwc-entity-selector-item__name\"\n    }, this.entityName), h(\"div\", {\n      class: \"cwc-entity-selector-item__id\"\n    }, this.entityId));\n  }\n\n  get host() {\n    return getElement(this);\n  }\n\n  static get style() {\n    return \"*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host{display:block;border:1px solid var(--cwc-entity-selector-item-border-color,var(--cwc-color-grayscale-lightish,#b0b0b0));border-radius:4px;padding:1rem;color:var(--cwc-entity-selector-item-color,var(--cwc-color-ui-primary-darkest,#001b3a));cursor:pointer;-webkit-box-sizing:border-box;box-sizing:border-box;width:calc(100% / 3 - 14px);margin-bottom:24px}.cwc-entity-selector-item__name{font-weight:500;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;margin-bottom:.175rem}.cwc-entity-selector-item__id{font-size:.75rem}\\@media (hover:hover){:host(:hover){border-color:var(--cwc-entity-selector-item-hover-border-color,var(--cwc-color-links,#3fa9f5))}}:host(:focus){border-color:var(--cwc-entity-selector-item-focus-border-color,var(--cwc-color-links,#3fa9f5));outline:none}:host(.active){border-color:var(--cwc-entity-selector-item-active-border-color,var(--cwc-color-links,#3fa9f5));background-color:var(--cwc-entity-selector-item-active-background-color,var(--cwc-color-links,#3fa9f5));color:var(--cwc-entity-selector-item-active-color,var(--cwc-color-grayscale-white,#fff))}\\@media (max-width:767px){:host{width:100%}}\";\n  }\n\n};\nexport { MenuEntity as cwc_entity_selector_item };","map":null,"metadata":{},"sourceType":"module"}