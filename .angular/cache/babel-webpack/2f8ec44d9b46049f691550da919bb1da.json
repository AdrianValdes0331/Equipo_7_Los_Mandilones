{"ast":null,"code":"import { akitaDevtools } from \"@datorama/akita\";\nimport { from } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./states/app.store\";\nimport * as i2 from \"./services/translation.service\";\nimport * as i3 from \"src/app/services/locale.service\";\nimport * as i4 from \"./queries/locale.queries\";\nimport * as i5 from \"./states/locale.store\";\nimport * as i6 from \"./services/session.service\";\nimport * as i7 from \"./queries/user.queries\";\nimport * as i8 from \"./services/legal-entity.service\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@cmx-web-components/angular\";\nimport * as i11 from \"@angular/router\";\nimport * as i12 from \"./pipes/translate.pipe\";\n\nfunction AppComponent_ng_container_0_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"views.app.loading.loadingMessage\"));\n  }\n}\n\nfunction AppComponent_ng_container_0_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"views.app.loading.delayMessage\"));\n  }\n}\n\nfunction AppComponent_ng_container_0_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"views.app.loading.errorMessage\"));\n  }\n}\n\nfunction AppComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"cwc-loader\", 2);\n    i0.ɵɵtemplate(2, AppComponent_ng_container_0_span_2_Template, 3, 3, \"span\", 3);\n    i0.ɵɵtemplate(3, AppComponent_ng_container_0_span_3_Template, 3, 3, \"span\", 4);\n    i0.ɵɵtemplate(4, AppComponent_ng_container_0_span_4_Template, 3, 3, \"span\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loadingCompleted);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loadingCompleted);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loadingCompleted);\n  }\n}\n\nfunction AppComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"router-outlet\");\n  }\n}\n/*\r\n  ToDo: Check translate pipe and service in order to manage race condition\r\n*/\n\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(appStore, translationService, ngZone, localeService, localeQuery, localeStore, sessionService, userQuery, legalEntitiesService) {\n      this.appStore = appStore;\n      this.translationService = translationService;\n      this.ngZone = ngZone;\n      this.localeService = localeService;\n      this.localeQuery = localeQuery;\n      this.localeStore = localeStore;\n      this.sessionService = sessionService;\n      this.userQuery = userQuery;\n      this.legalEntitiesService = legalEntitiesService;\n      this.title = \"cmx-learnhub-prototype\";\n      this.loadingCompleted = false;\n      akitaDevtools(this.ngZone, {});\n      from(this.translationService.loadTranslations()).subscribe(result => {\n        this.loadingCompleted = Boolean(result);\n      });\n    }\n\n    ngOnInit() {\n      this.localeService.getLanguageConfigs();\n      /*\r\n      ToDo: Different uses, uncomment if needed.\r\n      */\n      // this.localeQuery.availableLanguages$\n      //   .pipe(filter((langs) => !!langs && langs.length > 0))\n      //   .subscribe((langs) => {\n      //     if (\n      //       localStorage.getItem(\"language\") === null ||\n      //       localStorage.getItem(\"language\") === undefined\n      //     ) {\n      //       const mainLanguage = navigator.language.substr(0, 2);\n      //       const possibleLanguage = langs.filter((lang) =>\n      //         lang.languageISO.includes(`${mainLanguage}_`)\n      //       );\n      //       // use the closest language from the device\n      //       // from the possible languages, use the 1st, which can be the closest to the user\n      //       this.appStore.setUserLanguage(possibleLanguage[0].languageISO);\n      //     } else {\n      //       this.localeStore.setActiveLanguage(localStorage.getItem(\"language\"));\n      //     }\n      //     // we have the language definitions and we are\n      //     // ready to load the device language\n      //     // load translations into service\n      //   });\n      // idenfity if the app has been reloaded somehow and extract the tokens\n      // firstly by refreshing the token\n\n      this.userQuery.selectUserProfile$.subscribe(profiles => {\n        // the initial values of the profiles is null\n        if (profiles === null && localStorage.getItem(\"bearer\") !== undefined && localStorage.getItem(\"bearer\") !== null) {\n          // we have token but no active information\n          this.sessionService.refreshToken().subscribe(token => {\n            this.legalEntitiesService.getLegalEntities();\n          });\n        }\n      });\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.CmxAppStore), i0.ɵɵdirectiveInject(i2.TranslationService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.LocaleService), i0.ɵɵdirectiveInject(i4.LocaleQuery), i0.ɵɵdirectiveInject(i5.LocaleStore), i0.ɵɵdirectiveInject(i6.SessionService), i0.ɵɵdirectiveInject(i7.UserQuery), i0.ɵɵdirectiveInject(i8.LegalEntityService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[4, \"ngIf\", \"ngIfElse\"], [\"loadComplete\", \"\"], [\"size\", \"medium\"], [\"slot\", \"loading\", 4, \"ngIf\"], [\"slot\", \"delay\", 4, \"ngIf\"], [\"slot\", \"error\", 4, \"ngIf\"], [\"slot\", \"loading\"], [\"slot\", \"delay\"], [\"slot\", \"error\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AppComponent_ng_container_0_Template, 5, 3, \"ng-container\", 0);\n        i0.ɵɵtemplate(1, AppComponent_ng_template_1_Template, 1, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(2);\n\n        i0.ɵɵproperty(\"ngIf\", !ctx.loadingCompleted)(\"ngIfElse\", _r1);\n      }\n    },\n    directives: [i9.NgIf, i10.CwcLoader, i11.RouterOutlet],\n    pipes: [i12.TranslatePipe],\n    styles: [\".loading-container[_ngcontent-%COMP%]{position:fixed;align-items:center;justify-content:center;border:none;display:flex;background-color:#fff6;z-index:999;height:100vh;width:100vw}.loading-container[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{padding:20px}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}