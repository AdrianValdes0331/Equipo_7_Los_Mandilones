{"ast":null,"code":"import { r as registerInstance, h, g as getElement } from './core-85189c77.js';\nimport { i as initBasics, d as destroyBasics } from './commonComponentFeatures-b771e888.js';\nconst Breadcrumbs = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.breadcrumbs = [];\n    /**\n     * The design version of the framework\n     */\n\n    this.designVersion = null;\n    /**\n     * Specifies whether component should render from right to left\n     */\n\n    this.rtl = false;\n    /**\n     * Specify the breadcrumb aria-label\n     */\n\n    this.ariaLabelNav = 'Breadcrumb';\n    /**\n     * Fetch the breadcrumbs list\n     */\n\n    this.fetchBreadcrumbs = () => {\n      this.breadcrumbs = Array.from(this.host.getElementsByTagName('cwc-breadcrumb'));\n    };\n    /**\n     * Set the aria-current attribute to the last element of the breadcrumbs list\n     */\n\n\n    this.setAriaCurrent = () => {\n      const lastElem = this.breadcrumbs[this.breadcrumbs.length - 1];\n      lastElem && lastElem.setAttribute('aria-current', 'page');\n    };\n    /**\n     * Register listener on event when breadcrumbs are changed\n     */\n\n\n    this.registerSlotChangeHandler = () => {\n      const breadcrumbsSlot = this.host.shadowRoot.querySelector('slot');\n      breadcrumbsSlot.addEventListener('slotchange', this.handleSlotChange);\n    };\n    /**\n     * In case of Slot change, refresh the breadcrumbs list\n     */\n\n\n    this.handleSlotChange = () => {\n      this.fetchBreadcrumbs();\n    };\n  }\n\n  componentWillLoad() {\n    initBasics(this);\n  }\n\n  componentDidLoad() {\n    this.fetchBreadcrumbs();\n    this.setAriaCurrent();\n    this.registerSlotChangeHandler();\n  }\n\n  disconnectedCallback() {\n    destroyBasics(this);\n  }\n\n  render() {\n    return h(\"nav\", {\n      class: `cwc-breadcrumbs ${this.designVersion}`,\n      \"aria-label\": this.ariaLabelNav\n    }, h(\"div\", {\n      role: \"list\",\n      class: \"cwc-breadcrumbs__items\"\n    }, h(\"slot\", null)));\n  }\n\n  get host() {\n    return getElement(this);\n  }\n\n  static get style() {\n    return \"*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host{display:inline-block}.cwc-breadcrumbs{font-size:1rem;padding:0;margin:0}.cwc-breadcrumbs__items{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center}.v2.cwc-breadcrumbs{font-size:.75rem}\";\n  }\n\n};\nexport { Breadcrumbs as cwc_breadcrumbs };","map":null,"metadata":{},"sourceType":"module"}