{"ast":null,"code":"import { r as registerInstance, h, H as Host, g as getElement } from './core-85189c77.js';\nimport { i as initBasics, d as destroyBasics } from './commonComponentFeatures-b771e888.js';\nconst Avatar = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The design version of the framework\n     */\n\n    this.designVersion = null;\n    /**\n     * Variant is used to get a different style for the element\n     */\n\n    this.variant = 'positive';\n    /**\n     * Two different sizes of the avatar\n     */\n\n    this.size = 'regular'; // It creates two letters string from 'name' property\n\n    this.getInitials = fullName => {\n      const names = fullName.split(' ');\n      const initials = names.map(element => element.split('')[0].toUpperCase()); // when there are more than 3 names, it takes first letter from first and third name\n\n      if (initials.length >= 4) {\n        this.initials = initials[0] + initials[2];\n      } else if (initials.length > 1 && initials.length < 4) {\n        this.initials = initials[0] + initials[initials.length - 1];\n      } else {\n        this.initials = initials[0];\n      }\n    }; // Fallback to initials variant when invalid source path inserted\n\n\n    this.invalidPath = () => {\n      this.imageSource = null;\n    };\n  }\n\n  validateSourcePath() {\n    this.imageElement.onerror = () => {\n      this.imageSource = null;\n    };\n  }\n\n  createInitials() {\n    this.getInitials(this.name);\n  }\n\n  componentWillLoad() {\n    initBasics(this);\n  }\n\n  disconnectedCallback() {\n    destroyBasics(this);\n  }\n\n  componentWillRender() {\n    this.getInitials(this.name);\n  }\n\n  render() {\n    return h(Host, {\n      class: `cwc-avatar ${this.designVersion} ${this.variant === 'negative' ? 'cwc-avatar--inverted' : ''} ${this.size === 'small' ? ' cwc-avatar--small' : ''}`\n    }, this.imageSource ? h(\"img\", {\n      class: \"cwc-avatar__image\",\n      ref: el => this.imageElement = el,\n      src: this.imageSource,\n      alt: this.name,\n      onError: this.invalidPath\n    }) : h(\"span\", {\n      class: \"cwc-avatar__initials\"\n    }, this.initials));\n  }\n\n  get host() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"imageSource\": [\"validateSourcePath\"],\n      \"name\": [\"createInitials\"]\n    };\n  }\n\n  static get style() {\n    return \"*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host(.cwc-avatar){width:60px;height:60px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;color:var(--cwc-avatar-color,var(--cwc-color-ui-primary,#003876));background-color:var(--cwc-avatar-background-color,var(--cwc-color-grayscale-white,#fff));border-radius:50%;font-size:1.75rem;font-weight:700}:host(.cwc-avatar--inverted){color:var(--cwc-avatar-inverted-color,var(--cwc-color-grayscale-white,#fff));background-color:var(--cwc-avatar-inverted-background-color,var(--cwc-color-ui-primary,#003876))}:host(.cwc-avatar--small){width:32px;height:32px;font-size:.875rem}.cwc-avatar__image{-webkit-clip-path:circle(50% at center);clip-path:circle(50% at center);width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.cwc-avatar__initials{text-transform:uppercase}\";\n  }\n\n};\nexport { Avatar as cwc_avatar };","map":null,"metadata":{},"sourceType":"module"}