{"ast":null,"code":"import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './core-85189c77.js';\nimport { i as initBasics, d as destroyBasics } from './commonComponentFeatures-b771e888.js';\nconst Rater = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The design version of the framework\n     */\n\n    this.designVersion = null;\n    /**\n     * Rating from 1 - 5 stars, 0 - no rating\n     */\n\n    this.rating = 0;\n    /**\n     * When set to true the element is disabled and rating can be changed only programatically\n     */\n\n    this.disabled = false;\n    /**\n     * When set to true the element read only and rating can be changed only programatically\n     */\n\n    this.readOnly = false;\n    /**\n     * Specify whether component should render from right to left\n     */\n\n    this.rtl = false;\n    /**\n     * Small variant for rater\n     */\n\n    this.small = false; // Handles mouse hover\n\n    this.hover = star => {\n      for (let i = 0; i < star; i++) {\n        this.stars[i].setAttribute('name', 'favourite-active');\n        this.stars[i].setAttribute('color', 'bright-blue');\n      }\n\n      for (let i = star; i < 5; i++) {\n        this.stars[i].setAttribute('name', 'favourite');\n        this.stars[i].setAttribute('color', 'disabled-grey');\n      }\n    }; // Handles mouse out and when rating is changed\n\n\n    this.mouseOut = () => {\n      for (let i = 0; i < this.rating; i++) {\n        this.stars[i].setAttribute('name', 'favourite-active');\n        this.stars[i].setAttribute('color', 'bright-blue');\n      }\n\n      for (let i = this.rating; i < 5; i++) {\n        this.stars[i].setAttribute('name', 'favourite');\n        this.stars[i].setAttribute('color', 'disabled-grey');\n      }\n    };\n\n    this.cwcChange = createEvent(this, \"cwcChange\", 7);\n    this.cwcHover = createEvent(this, \"cwcHover\", 7);\n  }\n\n  ratingChange(newValue) {\n    if (!this.disabled) {\n      if (newValue < 6 && newValue >= 0) {\n        this.mouseOut();\n        this.cwcChange.emit(this.rating);\n      } else {\n        console.warn('Rating can be only between 0 - 5; 0 means not rated');\n        this.rating = 0;\n      }\n    } else {\n      for (let i = 0; i < this.rating; i++) {\n        this.stars[i].setAttribute('name', 'favourite-active');\n        this.stars[i].setAttribute('color', 'disabled-grey');\n      }\n\n      for (let i = this.rating; i < 5; i++) {\n        this.stars[i].setAttribute('name', 'favourite');\n        this.stars[i].setAttribute('color', 'disabled-grey');\n      }\n    }\n  }\n\n  disableChange() {\n    this.ratingChange(this.rating);\n  }\n\n  readOnlyChange() {\n    this.ratingChange(this.rating);\n  }\n  /**\n   * Rater can be controlled with arrows\n   */\n\n\n  handleKeyUp(ev) {\n    if (!(this.readOnly || this.disabled)) {\n      if (ev.key === 'ArrowLeft') {\n        if (this.rtl) {\n          if (this.rating !== 5) {\n            this.rating = this.rating + 1;\n          }\n        } else {\n          if (this.rating !== 1) {\n            this.rating = this.rating - 1;\n          }\n        }\n      } else if (ev.key === 'ArrowRight') {\n        if (this.rtl) {\n          if (this.rating !== 1) {\n            this.rating = this.rating - 1;\n          }\n        } else {\n          if (this.rating !== 5) {\n            this.rating = this.rating + 1;\n          }\n        }\n      }\n    }\n  }\n\n  componentWillLoad() {\n    initBasics(this);\n  }\n\n  disconnectedCallback() {\n    destroyBasics(this);\n  }\n\n  componentDidLoad() {\n    this.stars = this.host.shadowRoot.querySelectorAll('cwc-icon');\n    this.ratingChange(this.rating);\n  }\n\n  render() {\n    return h(Host, {\n      class: `cwc-rater ${(this.disabled || this.readOnly) && 'cwc-rater--disabled'}`,\n      tabindex: \"0\"\n    }, h(\"span\", {\n      class: \"sr-only\"\n    }, this.rating + ' stars out of 5'), h(\"cwc-icon\", {\n      class: 'cwc-rater__star' + (this.small ? ' cwc-rater__star--small' : ''),\n      designVersion: this.designVersion,\n      name: \"favourite\",\n      color: \"disabled-grey\",\n      onMouseOver: () => {\n        this.hover(1);\n        this.cwcHover.emit([1, true]);\n      },\n      onMouseOut: () => {\n        this.mouseOut();\n        this.cwcHover.emit([1, false]);\n      },\n      onClick: () => {\n        this.rating = 1;\n      }\n    }), h(\"cwc-icon\", {\n      class: 'cwc-rater__star' + (this.small ? ' cwc-rater__star--small' : ''),\n      designVersion: this.designVersion,\n      name: \"favourite\",\n      color: \"disabled-grey\",\n      onMouseOver: () => {\n        this.hover(2);\n        this.cwcHover.emit([2, true]);\n      },\n      onMouseOut: () => {\n        this.mouseOut();\n        this.cwcHover.emit([2, false]);\n      },\n      onClick: () => {\n        this.rating = 2;\n      }\n    }), h(\"cwc-icon\", {\n      class: 'cwc-rater__star' + (this.small ? ' cwc-rater__star--small' : ''),\n      designVersion: this.designVersion,\n      name: \"favourite\",\n      color: \"disabled-grey\",\n      onMouseOver: () => {\n        this.hover(3);\n        this.cwcHover.emit([3, true]);\n      },\n      onMouseOut: () => {\n        this.mouseOut();\n        this.cwcHover.emit([3, false]);\n      },\n      onClick: () => {\n        this.rating = 3;\n      }\n    }), h(\"cwc-icon\", {\n      class: 'cwc-rater__star' + (this.small ? ' cwc-rater__star--small' : ''),\n      designVersion: this.designVersion,\n      name: \"favourite\",\n      color: \"disabled-grey\",\n      onMouseOver: () => {\n        this.hover(4);\n        this.cwcHover.emit([4, true]);\n      },\n      onMouseOut: () => {\n        this.mouseOut();\n        this.cwcHover.emit([4, false]);\n      },\n      onClick: () => {\n        this.rating = 4;\n      }\n    }), h(\"cwc-icon\", {\n      class: 'cwc-rater__star' + (this.small ? ' cwc-rater__star--small' : ''),\n      designVersion: this.designVersion,\n      name: \"favourite\",\n      color: \"disabled-grey\",\n      onMouseOver: () => {\n        this.hover(5);\n        this.cwcHover.emit([5, true]);\n      },\n      onMouseOut: () => {\n        this.mouseOut();\n        this.cwcHover.emit([5, false]);\n      },\n      onClick: () => {\n        this.rating = 5;\n      }\n    }));\n  }\n\n  get host() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"rating\": [\"ratingChange\"],\n      \"disabled\": [\"disableChange\"],\n      \"readOnly\": [\"readOnlyChange\"]\n    };\n  }\n\n  static get style() {\n    return \"*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}[dir=ltr] :host{text-align:left}[dir=rtl] :host{text-align:right}:host{display:-ms-inline-flexbox;display:inline-flex;position:relative;text-align:start}:host(.cwc-rater--disabled){pointer-events:none}:host(:focus){outline:none}.cwc-rater__star{font-size:1.25rem;cursor:pointer}.cwc-rater__star--small{font-size:.75rem}.sr-only{position:absolute;opacity:0;pointer-events:none;width:0;height:0;overflow:hidden}\";\n  }\n\n};\nexport { Rater as cwc_rater };","map":null,"metadata":{},"sourceType":"module"}